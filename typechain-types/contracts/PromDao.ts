/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface PromDaoInterface extends utils.Interface {
  functions: {
    "claimTokens(address,uint256)": FunctionFragment;
    "prom()": FunctionFragment;
    "rentalAdditionProposalVote(address,uint256)": FunctionFragment;
    "rentalListingAdditionProposal(address)": FunctionFragment;
    "rentalListingRemovalProposal(address)": FunctionFragment;
    "rentalRemovalProposalVote(address,uint256)": FunctionFragment;
    "submitRentalListingAdditionProposal(address,address)": FunctionFragment;
    "submitRentalListingRemovalProposal(address,address)": FunctionFragment;
    "submitTradeListingAdditionProposal(address)": FunctionFragment;
    "submitTradeListingRemovalProposal(address)": FunctionFragment;
    "tradeAdditionProposalVote(address,uint256)": FunctionFragment;
    "tradeListingAdditionProposal(address)": FunctionFragment;
    "tradeListingRemovalProposal(address)": FunctionFragment;
    "tradeRemovalProposalVote(address,uint256)": FunctionFragment;
    "votedProposals(address,address)": FunctionFragment;
    "votesThreshold()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "claimTokens"
      | "prom"
      | "rentalAdditionProposalVote"
      | "rentalListingAdditionProposal"
      | "rentalListingRemovalProposal"
      | "rentalRemovalProposalVote"
      | "submitRentalListingAdditionProposal"
      | "submitRentalListingRemovalProposal"
      | "submitTradeListingAdditionProposal"
      | "submitTradeListingRemovalProposal"
      | "tradeAdditionProposalVote"
      | "tradeListingAdditionProposal"
      | "tradeListingRemovalProposal"
      | "tradeRemovalProposalVote"
      | "votedProposals"
      | "votesThreshold"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "claimTokens",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "prom", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rentalAdditionProposalVote",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "rentalListingAdditionProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "rentalListingRemovalProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "rentalRemovalProposalVote",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "submitRentalListingAdditionProposal",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "submitRentalListingRemovalProposal",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "submitTradeListingAdditionProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "submitTradeListingRemovalProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tradeAdditionProposalVote",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tradeListingAdditionProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tradeListingRemovalProposal",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tradeRemovalProposalVote",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "votedProposals",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "votesThreshold",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "claimTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "prom", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rentalAdditionProposalVote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rentalListingAdditionProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rentalListingRemovalProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rentalRemovalProposalVote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitRentalListingAdditionProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitRentalListingRemovalProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitTradeListingAdditionProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitTradeListingRemovalProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tradeAdditionProposalVote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tradeListingAdditionProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tradeListingRemovalProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tradeRemovalProposalVote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votedProposals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votesThreshold",
    data: BytesLike
  ): Result;

  events: {
    "RentalListingAdditionProposalSubmitted(address)": EventFragment;
    "RentalListingAdditionProposalVoteRemoved(address)": EventFragment;
    "RentalListingAdditionProposalVoted(address)": EventFragment;
    "RentalListingRemovalProposalSubmitted(address)": EventFragment;
    "RentalListingRemovalProposalVoteRemoved(address)": EventFragment;
    "RentalListingRemovalProposalVoted(address)": EventFragment;
    "TradeListingAdditionProposalSubmitted(address)": EventFragment;
    "TradeListingAdditionProposalVoteRemoved(address)": EventFragment;
    "TradeListingAdditionProposalVoted(address)": EventFragment;
    "TradeListingRemovalProposalSubmitted(address)": EventFragment;
    "TradeListingRemovalProposalVoteRemoved(address)": EventFragment;
    "TradeListingRemovalProposalVoted(address)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "RentalListingAdditionProposalSubmitted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RentalListingAdditionProposalVoteRemoved"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RentalListingAdditionProposalVoted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RentalListingRemovalProposalSubmitted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RentalListingRemovalProposalVoteRemoved"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RentalListingRemovalProposalVoted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingAdditionProposalSubmitted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingAdditionProposalVoteRemoved"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingAdditionProposalVoted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingRemovalProposalSubmitted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingRemovalProposalVoteRemoved"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TradeListingRemovalProposalVoted"
  ): EventFragment;
}

export interface RentalListingAdditionProposalSubmittedEventObject {
  collectionToAdd: string;
}
export type RentalListingAdditionProposalSubmittedEvent = TypedEvent<
  [string],
  RentalListingAdditionProposalSubmittedEventObject
>;

export type RentalListingAdditionProposalSubmittedEventFilter =
  TypedEventFilter<RentalListingAdditionProposalSubmittedEvent>;

export interface RentalListingAdditionProposalVoteRemovedEventObject {
  proposalAddress: string;
}
export type RentalListingAdditionProposalVoteRemovedEvent = TypedEvent<
  [string],
  RentalListingAdditionProposalVoteRemovedEventObject
>;

export type RentalListingAdditionProposalVoteRemovedEventFilter =
  TypedEventFilter<RentalListingAdditionProposalVoteRemovedEvent>;

export interface RentalListingAdditionProposalVotedEventObject {
  proposalAddress: string;
}
export type RentalListingAdditionProposalVotedEvent = TypedEvent<
  [string],
  RentalListingAdditionProposalVotedEventObject
>;

export type RentalListingAdditionProposalVotedEventFilter =
  TypedEventFilter<RentalListingAdditionProposalVotedEvent>;

export interface RentalListingRemovalProposalSubmittedEventObject {
  collectionToRemove: string;
}
export type RentalListingRemovalProposalSubmittedEvent = TypedEvent<
  [string],
  RentalListingRemovalProposalSubmittedEventObject
>;

export type RentalListingRemovalProposalSubmittedEventFilter =
  TypedEventFilter<RentalListingRemovalProposalSubmittedEvent>;

export interface RentalListingRemovalProposalVoteRemovedEventObject {
  proposalAddress: string;
}
export type RentalListingRemovalProposalVoteRemovedEvent = TypedEvent<
  [string],
  RentalListingRemovalProposalVoteRemovedEventObject
>;

export type RentalListingRemovalProposalVoteRemovedEventFilter =
  TypedEventFilter<RentalListingRemovalProposalVoteRemovedEvent>;

export interface RentalListingRemovalProposalVotedEventObject {
  proposalAddress: string;
}
export type RentalListingRemovalProposalVotedEvent = TypedEvent<
  [string],
  RentalListingRemovalProposalVotedEventObject
>;

export type RentalListingRemovalProposalVotedEventFilter =
  TypedEventFilter<RentalListingRemovalProposalVotedEvent>;

export interface TradeListingAdditionProposalSubmittedEventObject {
  collectionToAdd: string;
}
export type TradeListingAdditionProposalSubmittedEvent = TypedEvent<
  [string],
  TradeListingAdditionProposalSubmittedEventObject
>;

export type TradeListingAdditionProposalSubmittedEventFilter =
  TypedEventFilter<TradeListingAdditionProposalSubmittedEvent>;

export interface TradeListingAdditionProposalVoteRemovedEventObject {
  proposalAddress: string;
}
export type TradeListingAdditionProposalVoteRemovedEvent = TypedEvent<
  [string],
  TradeListingAdditionProposalVoteRemovedEventObject
>;

export type TradeListingAdditionProposalVoteRemovedEventFilter =
  TypedEventFilter<TradeListingAdditionProposalVoteRemovedEvent>;

export interface TradeListingAdditionProposalVotedEventObject {
  proposalAddress: string;
}
export type TradeListingAdditionProposalVotedEvent = TypedEvent<
  [string],
  TradeListingAdditionProposalVotedEventObject
>;

export type TradeListingAdditionProposalVotedEventFilter =
  TypedEventFilter<TradeListingAdditionProposalVotedEvent>;

export interface TradeListingRemovalProposalSubmittedEventObject {
  collectionToRemove: string;
}
export type TradeListingRemovalProposalSubmittedEvent = TypedEvent<
  [string],
  TradeListingRemovalProposalSubmittedEventObject
>;

export type TradeListingRemovalProposalSubmittedEventFilter =
  TypedEventFilter<TradeListingRemovalProposalSubmittedEvent>;

export interface TradeListingRemovalProposalVoteRemovedEventObject {
  proposalAddress: string;
}
export type TradeListingRemovalProposalVoteRemovedEvent = TypedEvent<
  [string],
  TradeListingRemovalProposalVoteRemovedEventObject
>;

export type TradeListingRemovalProposalVoteRemovedEventFilter =
  TypedEventFilter<TradeListingRemovalProposalVoteRemovedEvent>;

export interface TradeListingRemovalProposalVotedEventObject {
  proposalAddress: string;
}
export type TradeListingRemovalProposalVotedEvent = TypedEvent<
  [string],
  TradeListingRemovalProposalVotedEventObject
>;

export type TradeListingRemovalProposalVotedEventFilter =
  TypedEventFilter<TradeListingRemovalProposalVotedEvent>;

export interface PromDao extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PromDaoInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    claimTokens(
      _proposalAddress: PromiseOrValue<string>,
      _proposalType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    prom(overrides?: CallOverrides): Promise<[string]>;

    rentalAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    rentalListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        actionValidator: string;
        timestamp: BigNumber;
        votes: BigNumber;
      }
    >;

    rentalListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        actionValidator: string;
        timestamp: BigNumber;
        votes: BigNumber;
      }
    >;

    rentalRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    submitRentalListingAdditionProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    submitRentalListingRemovalProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    submitTradeListingAdditionProposal(
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    submitTradeListingRemovalProposal(
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tradeAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tradeListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
    >;

    tradeListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
    >;

    tradeRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    votedProposals(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    votesThreshold(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  claimTokens(
    _proposalAddress: PromiseOrValue<string>,
    _proposalType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  prom(overrides?: CallOverrides): Promise<string>;

  rentalAdditionProposalVote(
    _proposalAddress: PromiseOrValue<string>,
    _voteAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  rentalListingAdditionProposal(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      actionValidator: string;
      timestamp: BigNumber;
      votes: BigNumber;
    }
  >;

  rentalListingRemovalProposal(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      actionValidator: string;
      timestamp: BigNumber;
      votes: BigNumber;
    }
  >;

  rentalRemovalProposalVote(
    _proposalAddress: PromiseOrValue<string>,
    _voteAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  submitRentalListingAdditionProposal(
    _newActionValidator: PromiseOrValue<string>,
    _collectionToAdd: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  submitRentalListingRemovalProposal(
    _newActionValidator: PromiseOrValue<string>,
    _collectionToRemove: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  submitTradeListingAdditionProposal(
    _collectionToAdd: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  submitTradeListingRemovalProposal(
    _collectionToRemove: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tradeAdditionProposalVote(
    _proposalAddress: PromiseOrValue<string>,
    _voteAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tradeListingAdditionProposal(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
  >;

  tradeListingRemovalProposal(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
  >;

  tradeRemovalProposalVote(
    _proposalAddress: PromiseOrValue<string>,
    _voteAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  votedProposals(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  votesThreshold(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    claimTokens(
      _proposalAddress: PromiseOrValue<string>,
      _proposalType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    prom(overrides?: CallOverrides): Promise<string>;

    rentalAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    rentalListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        actionValidator: string;
        timestamp: BigNumber;
        votes: BigNumber;
      }
    >;

    rentalListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        actionValidator: string;
        timestamp: BigNumber;
        votes: BigNumber;
      }
    >;

    rentalRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    submitRentalListingAdditionProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    submitRentalListingRemovalProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    submitTradeListingAdditionProposal(
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    submitTradeListingRemovalProposal(
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    tradeAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    tradeListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
    >;

    tradeListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { timestamp: BigNumber; votes: BigNumber }
    >;

    tradeRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    votedProposals(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    votesThreshold(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "RentalListingAdditionProposalSubmitted(address)"(
      collectionToAdd?: null
    ): RentalListingAdditionProposalSubmittedEventFilter;
    RentalListingAdditionProposalSubmitted(
      collectionToAdd?: null
    ): RentalListingAdditionProposalSubmittedEventFilter;

    "RentalListingAdditionProposalVoteRemoved(address)"(
      proposalAddress?: null
    ): RentalListingAdditionProposalVoteRemovedEventFilter;
    RentalListingAdditionProposalVoteRemoved(
      proposalAddress?: null
    ): RentalListingAdditionProposalVoteRemovedEventFilter;

    "RentalListingAdditionProposalVoted(address)"(
      proposalAddress?: null
    ): RentalListingAdditionProposalVotedEventFilter;
    RentalListingAdditionProposalVoted(
      proposalAddress?: null
    ): RentalListingAdditionProposalVotedEventFilter;

    "RentalListingRemovalProposalSubmitted(address)"(
      collectionToRemove?: null
    ): RentalListingRemovalProposalSubmittedEventFilter;
    RentalListingRemovalProposalSubmitted(
      collectionToRemove?: null
    ): RentalListingRemovalProposalSubmittedEventFilter;

    "RentalListingRemovalProposalVoteRemoved(address)"(
      proposalAddress?: null
    ): RentalListingRemovalProposalVoteRemovedEventFilter;
    RentalListingRemovalProposalVoteRemoved(
      proposalAddress?: null
    ): RentalListingRemovalProposalVoteRemovedEventFilter;

    "RentalListingRemovalProposalVoted(address)"(
      proposalAddress?: null
    ): RentalListingRemovalProposalVotedEventFilter;
    RentalListingRemovalProposalVoted(
      proposalAddress?: null
    ): RentalListingRemovalProposalVotedEventFilter;

    "TradeListingAdditionProposalSubmitted(address)"(
      collectionToAdd?: null
    ): TradeListingAdditionProposalSubmittedEventFilter;
    TradeListingAdditionProposalSubmitted(
      collectionToAdd?: null
    ): TradeListingAdditionProposalSubmittedEventFilter;

    "TradeListingAdditionProposalVoteRemoved(address)"(
      proposalAddress?: null
    ): TradeListingAdditionProposalVoteRemovedEventFilter;
    TradeListingAdditionProposalVoteRemoved(
      proposalAddress?: null
    ): TradeListingAdditionProposalVoteRemovedEventFilter;

    "TradeListingAdditionProposalVoted(address)"(
      proposalAddress?: null
    ): TradeListingAdditionProposalVotedEventFilter;
    TradeListingAdditionProposalVoted(
      proposalAddress?: null
    ): TradeListingAdditionProposalVotedEventFilter;

    "TradeListingRemovalProposalSubmitted(address)"(
      collectionToRemove?: null
    ): TradeListingRemovalProposalSubmittedEventFilter;
    TradeListingRemovalProposalSubmitted(
      collectionToRemove?: null
    ): TradeListingRemovalProposalSubmittedEventFilter;

    "TradeListingRemovalProposalVoteRemoved(address)"(
      proposalAddress?: null
    ): TradeListingRemovalProposalVoteRemovedEventFilter;
    TradeListingRemovalProposalVoteRemoved(
      proposalAddress?: null
    ): TradeListingRemovalProposalVoteRemovedEventFilter;

    "TradeListingRemovalProposalVoted(address)"(
      proposalAddress?: null
    ): TradeListingRemovalProposalVotedEventFilter;
    TradeListingRemovalProposalVoted(
      proposalAddress?: null
    ): TradeListingRemovalProposalVotedEventFilter;
  };

  estimateGas: {
    claimTokens(
      _proposalAddress: PromiseOrValue<string>,
      _proposalType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    prom(overrides?: CallOverrides): Promise<BigNumber>;

    rentalAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    rentalListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    rentalListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    rentalRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    submitRentalListingAdditionProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    submitRentalListingRemovalProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    submitTradeListingAdditionProposal(
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    submitTradeListingRemovalProposal(
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tradeAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tradeListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tradeListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tradeRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    votedProposals(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    votesThreshold(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    claimTokens(
      _proposalAddress: PromiseOrValue<string>,
      _proposalType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    prom(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rentalAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    rentalListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    rentalListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    rentalRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    submitRentalListingAdditionProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    submitRentalListingRemovalProposal(
      _newActionValidator: PromiseOrValue<string>,
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    submitTradeListingAdditionProposal(
      _collectionToAdd: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    submitTradeListingRemovalProposal(
      _collectionToRemove: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tradeAdditionProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tradeListingAdditionProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tradeListingRemovalProposal(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tradeRemovalProposalVote(
      _proposalAddress: PromiseOrValue<string>,
      _voteAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    votedProposals(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    votesThreshold(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
