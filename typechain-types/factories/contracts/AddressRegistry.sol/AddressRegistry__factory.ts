/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AddressRegistry,
  AddressRegistryInterface,
} from "../../../contracts/AddressRegistry.sol/AddressRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newActionValidator",
        type: "address",
      },
    ],
    name: "ActionValidatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimalVersion",
        type: "uint256",
      },
    ],
    name: "ERC1155CollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ERC1155TokenStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimalVersion",
        type: "uint256",
      },
    ],
    name: "ERC721CollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newPromDao",
        type: "address",
      },
    ],
    name: "PromDaoSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "proxyFactory",
        type: "address",
      },
    ],
    name: "ProxyFactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "royaltyCollector",
        type: "address",
      },
    ],
    name: "RoyaltyCollectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "TradeCollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TradeMarketplaceFeeReceivereUpdated",
        type: "address",
      },
    ],
    name: "TradeMarketplaceFeeReceivereUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tradeMarketplace",
        type: "address",
      },
    ],
    name: "TradeMarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newVaultManager",
        type: "address",
      },
    ],
    name: "VaultManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bundleMarketplace",
        type: "address",
      },
    ],
    name: "bundleMarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "actionValidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "rentalProposalImplemented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "tradeProposalImplemented",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ERC1155CollectionVaultVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ERC721CollectionVaultVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionValidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bundleMarketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "implementedProposalAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isERC1155Enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isERC1155TokenDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTradeCollectionEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "promDao",
    outputs: [
      {
        internalType: "contract PromDao",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_actionValidator",
        type: "address",
      },
    ],
    name: "setActionValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bundleMarketplace",
        type: "address",
      },
    ],
    name: "setBundleMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimalVersion",
        type: "uint256",
      },
    ],
    name: "setERC1155CollectionVaultVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimalVersion",
        type: "uint256",
      },
    ],
    name: "setERC721CollectionVaultVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsERC1155TokenDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsTradeCollectionEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMarketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPromDao",
        type: "address",
      },
    ],
    name: "setPromDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rentalCollection",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isEnabled",
        type: "bool",
      },
    ],
    name: "setProposedRentalCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeCollection",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isEnabled",
        type: "bool",
      },
    ],
    name: "setProposedTradeCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newProxyFactory",
        type: "address",
      },
    ],
    name: "setProxyFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRoyaltyCollector",
        type: "address",
      },
    ],
    name: "setRoyaltyCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracleAddress",
        type: "address",
      },
    ],
    name: "setTokenOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeMarketplace",
        type: "address",
      },
    ],
    name: "setTradeMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeMarketplaceFeeReceiver",
        type: "address",
      },
    ],
    name: "setTradeMarketplaceFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVaultManager",
        type: "address",
      },
    ],
    name: "setVaultManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeMarketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeMarketplaceFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61236f806200010e6000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063a7a5eaa011610125578063e2b9aa06116100ad578063f2fde38b1161007c578063f2fde38b146105ea578063f35d39c614610606578063fbddd75114610622578063fdde07fa1461063e578063ffcf6fd81461065a57610211565b8063e2b9aa0614610564578063eae4a21c14610580578063eb09271c1461059e578063eee83ea7146105ce57610211565b8063b50dfa71116100f4578063b50dfa71146104c0578063b543503e146104de578063c10f1a75146104fa578063cbced39d14610518578063cd66c7e41461053457610211565b8063a7a5eaa01461043a578063a9e2844d14610456578063abc8c7af14610472578063acb975011461049057610211565b8063764467cc116101a85780638809ae76116101775780638809ae76146103a85780638a4adf24146103c45780638da5cb5b146103e25780639e1f5b2814610400578063a22cb2fc1461041e57610211565b8063764467cc14610324578063804d69c014610340578063823e371c1461035c578063842d4cbf1461038c57610211565b80636d6ac730116101e45780636d6ac730146102b0578063715018a6146102ce5780637319d04b146102d857806373ad6c2d1461030857610211565b80631db8b7aa1461021657806344680e75146102465780635a50afa01461027657806369b628fc14610292575b600080fd5b610230600480360381019061022b9190611bc7565b610678565b60405161023d9190611c0f565b60405180910390f35b610260600480360381019061025b9190611bc7565b610698565b60405161026d9190611c43565b60405180910390f35b610290600480360381019061028b9190611cb6565b6106b0565b005b61029a6107ed565b6040516102a79190611d68565b60405180910390f35b6102b8610813565b6040516102c59190611d92565b60405180910390f35b6102d6610839565b005b6102f260048036038101906102ed9190611dad565b61084d565b6040516102ff9190611c0f565b60405180910390f35b610322600480360381019061031d9190611bc7565b610901565b005b61033e60048036038101906103399190611ded565b610984565b005b61035a60048036038101906103559190611bc7565b610a0e565b005b61037660048036038101906103719190611bc7565b610a91565b6040516103839190611c43565b60405180910390f35b6103a660048036038101906103a19190611bc7565b610aa9565b005b6103c260048036038101906103bd9190611dad565b610af5565b005b6103cc610c0b565b6040516103d99190611d92565b60405180910390f35b6103ea610c31565b6040516103f79190611d92565b60405180910390f35b610408610c5a565b6040516104159190611d92565b60405180910390f35b61043860048036038101906104339190611bc7565b610c80565b005b610454600480360381019061044f9190611e2d565b610d03565b005b610470600480360381019061046b9190611e2d565b610f89565b005b61047a61125f565b6040516104879190611d92565b60405180910390f35b6104aa60048036038101906104a59190611dad565b611285565b6040516104b79190611c0f565b60405180910390f35b6104c86112b4565b6040516104d59190611d92565b60405180910390f35b6104f860048036038101906104f39190611bc7565b6112da565b005b61050261135d565b60405161050f9190611d92565b60405180910390f35b610532600480360381019061052d9190611bc7565b611383565b005b61054e60048036038101906105499190611bc7565b611406565b60405161055b9190611c0f565b60405180910390f35b61057e60048036038101906105799190611dad565b611426565b005b61058861153c565b6040516105959190611d92565b60405180910390f35b6105b860048036038101906105b39190611bc7565b611562565b6040516105c59190611d92565b60405180910390f35b6105e860048036038101906105e39190611bc7565b611595565b005b61060460048036038101906105ff9190611bc7565b611618565b005b610620600480360381019061061b9190611bc7565b61169b565b005b61063c60048036038101906106379190611bc7565b61171e565b005b61065860048036038101906106539190611e2d565b6117a1565b005b6106626118ca565b60405161066f9190611d92565b60405180910390f35b600e6020528060005260406000206000915054906101000a900460ff1681565b600b6020528060005260406000206000915090505481565b6106b86118f0565b600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611eca565b60405180910390fd5b80600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa6fdc2fd9c7b4cd44d514b8e689a836238436ff296344c1f0095ac99ad95c72d8383836040516107e093929190611eea565b60405180910390a1505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108416118f0565b61084b600061196e565b565b600080600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156108f95750600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16155b905092915050565b6109096118f0565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc816040516109799190611d92565b60405180910390a150565b61098c6118f0565b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610a166118f0565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5afc39f421eeb15ee3787d6fe81fca84a7f13ed1348c6f673ce12ce80aa1ed7281604051610a869190611d92565b60405180910390a150565b600c6020528060005260406000206000915090505481565b610ab16118f0565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610afd6118f0565b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190611eca565b60405180910390fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f0edd0768f543760ea601d91778e2e18fb6479b95c21bdaccec59459a32a63cb78282604051610bff929190611f21565b60405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c886118f0565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f438e264fcebeb3c3f680ef6c7a5a07264deae79f3df951d7d05c47152fcd16bf81604051610cf89190611d92565b60405180910390a150565b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8790611f96565b60405180910390fd5b6000808215610e4357600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663054436bb856040518263ffffffff1660e01b8152600401610df49190611d92565b60408051808303816000875af1158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190611fcb565b8092508193505050610ee9565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166385dc4862856040518263ffffffff1660e01b8152600401610e9e9190611d92565b60408051808303816000875af1158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee09190611fcb565b80925081935050505b610ef38282611a32565b82600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe2432be426a3e1a1339334050b7ae2f67134cedb71fe24dc925c7f8470804b7d8484604051610f7b92919061200b565b60405180910390a150505050565b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90611f96565b60405180910390fd5b600080600083156110d057600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637126721d866040518263ffffffff1660e01b815260040161107c9190611d92565b6060604051808303816000875af115801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf9190612049565b80945081955082935050505061117b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664e6985866040518263ffffffff1660e01b815260040161112b9190611d92565b6060604051808303816000875af115801561114a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e9190612049565b8094508195508293505050505b6111858383611a32565b83600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2969126c2c805a614145677d605cf8a0c06dc212008e72c9f122368ddb9c5ac8582866040516112509392919061209c565b60405180910390a15050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112e26118f0565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcdba42b90a1db6ef05bf5758b36301b44ac50226364e050628807a6ceef24bc2816040516113529190611d92565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61138b6118f0565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5fdc129548e321272e588ee4c33538820b7196de0e3cb3d86e2d4e083c3e6637816040516113fb9190611d92565b60405180910390a150565b600f6020528060005260406000206000915054906101000a900460ff1681565b61142e6118f0565b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156114bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b290611eca565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6424e6bd708b8fd5bff8d2b3ce32081cbb05cbe22a2c18b9b52ed6816418d5bf8282604051611530929190611f21565b60405180910390a15050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61159d6118f0565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6ed761c4f6d0492bd10cfdea6169b43b198eb25f9316b0a5b202625dc65b568f8160405161160d9190611d92565b60405180910390a150565b6116206118f0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361168f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168690612145565b60405180910390fd5b6116988161196e565b50565b6116a36118f0565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1d9e1ba93072b534a62508d2e9294981f4391cec685c4600d04a92be92266ca816040516117139190611d92565b60405180910390a150565b6117266118f0565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f06fb15b3928ea45c766cc3b08212ecc978647d51cf9551cdd13a70d6a00197c7816040516117969190611d92565b60405180910390a150565b6117a96118f0565b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d90611eca565b60405180910390fd5b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd6ab10d67f4aa4659621600046772a83bb0776f6b9a7f22bface047d6734e01082826040516118be92919061200b565b60405180910390a15050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6118f8611b5c565b73ffffffffffffffffffffffffffffffffffffffff16611916610c31565b73ffffffffffffffffffffffffffffffffffffffff161461196c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611963906121b1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b426212750083611a429190612200565b1115611a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7a90612280565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338f2e1756040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1691906122a0565b811015611b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4f90612319565b60405180910390fd5b5050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9482611b69565b9050919050565b611ba481611b89565b8114611baf57600080fd5b50565b600081359050611bc181611b9b565b92915050565b600060208284031215611bdd57611bdc611b64565b5b6000611beb84828501611bb2565b91505092915050565b60008115159050919050565b611c0981611bf4565b82525050565b6000602082019050611c246000830184611c00565b92915050565b6000819050919050565b611c3d81611c2a565b82525050565b6000602082019050611c586000830184611c34565b92915050565b611c6781611c2a565b8114611c7257600080fd5b50565b600081359050611c8481611c5e565b92915050565b611c9381611bf4565b8114611c9e57600080fd5b50565b600081359050611cb081611c8a565b92915050565b600080600060608486031215611ccf57611cce611b64565b5b6000611cdd86828701611bb2565b9350506020611cee86828701611c75565b9250506040611cff86828701611ca1565b9150509250925092565b6000819050919050565b6000611d2e611d29611d2484611b69565b611d09565b611b69565b9050919050565b6000611d4082611d13565b9050919050565b6000611d5282611d35565b9050919050565b611d6281611d47565b82525050565b6000602082019050611d7d6000830184611d59565b92915050565b611d8c81611b89565b82525050565b6000602082019050611da76000830184611d83565b92915050565b60008060408385031215611dc457611dc3611b64565b5b6000611dd285828601611bb2565b9250506020611de385828601611c75565b9150509250929050565b60008060408385031215611e0457611e03611b64565b5b6000611e1285828601611bb2565b9250506020611e2385828601611bb2565b9150509250929050565b60008060408385031215611e4457611e43611b64565b5b6000611e5285828601611bb2565b9250506020611e6385828601611ca1565b9150509250929050565b600082825260208201905092915050565b7f4d6179206e6f74206f766572726964652070726f706f73616c00000000000000600082015250565b6000611eb4601983611e6d565b9150611ebf82611e7e565b602082019050919050565b60006020820190508181036000830152611ee381611ea7565b9050919050565b6000606082019050611eff6000830186611d83565b611f0c6020830185611c34565b611f196040830184611c00565b949350505050565b6000604082019050611f366000830185611d83565b611f436020830184611c34565b9392505050565b7f616c726561647920696d706c656d656e74656400000000000000000000000000600082015250565b6000611f80601383611e6d565b9150611f8b82611f4a565b602082019050919050565b60006020820190508181036000830152611faf81611f73565b9050919050565b600081519050611fc581611c5e565b92915050565b60008060408385031215611fe257611fe1611b64565b5b6000611ff085828601611fb6565b925050602061200185828601611fb6565b9150509250929050565b60006040820190506120206000830185611d83565b61202d6020830184611c00565b9392505050565b60008151905061204381611b9b565b92915050565b60008060006060848603121561206257612061611b64565b5b600061207086828701612034565b935050602061208186828701611fb6565b925050604061209286828701611fb6565b9150509250925092565b60006060820190506120b16000830186611d83565b6120be6020830185611d83565b6120cb6040830184611c00565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061212f602683611e6d565b915061213a826120d3565b604082019050919050565b6000602082019050818103600083015261215e81612122565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061219b602083611e6d565b91506121a682612165565b602082019050919050565b600060208201905081810360008301526121ca8161218e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220b82611c2a565b915061221683611c2a565b925082820190508082111561222e5761222d6121d1565b5b92915050565b7f566f74696e67206973207374696c6c20696e2070726f67726573730000000000600082015250565b600061226a601b83611e6d565b915061227582612234565b602082019050919050565b600060208201905081810360008301526122998161225d565b9050919050565b6000602082840312156122b6576122b5611b64565b5b60006122c484828501611fb6565b91505092915050565b7f6e6f7420656e6f75676820766f74657300000000000000000000000000000000600082015250565b6000612303601083611e6d565b915061230e826122cd565b602082019050919050565b60006020820190508181036000830152612332816122f6565b905091905056fea2646970667358221220cf5a858e9c9606f6eec3f7463828be7eef747ba2ddaf8e0dd7da7dcaf3631abb64736f6c63430008130033";

type AddressRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressRegistry__factory extends ContractFactory {
  constructor(...args: AddressRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressRegistry> {
    return super.deploy(overrides || {}) as Promise<AddressRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressRegistry {
    return super.attach(address) as AddressRegistry;
  }
  override connect(signer: Signer): AddressRegistry__factory {
    return super.connect(signer) as AddressRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressRegistryInterface {
    return new utils.Interface(_abi) as AddressRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressRegistry {
    return new Contract(address, _abi, signerOrProvider) as AddressRegistry;
  }
}
