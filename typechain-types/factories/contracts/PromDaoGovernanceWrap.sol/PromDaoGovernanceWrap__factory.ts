/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PromDaoGovernanceWrap,
  PromDaoGovernanceWrapInterface,
} from "../../../contracts/PromDaoGovernanceWrap.sol/PromDaoGovernanceWrap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_prom",
        type: "address",
      },
      {
        internalType: "contract IAddressRegistry",
        name: "_addressRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovesNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughPower",
    type: "error",
  },
  {
    inputs: [],
    name: "TransfersNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unwrapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Wrapped",
    type: "event",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prom",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wrappedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001f9438038062001f948339818101604052810190620000379190620002b1565b6040518060400160405280601881526020017f50726f6d2046656520496e666c75656e636520506f77657200000000000000008152506040518060400160405280600481526020017f504649500000000000000000000000000000000000000000000000000000000081525060016000819055508160049081620000bc919062000572565b508060059081620000ce919062000572565b505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480620001395750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1562000171576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000659565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022082620001f3565b9050919050565b6000620002348262000213565b9050919050565b620002468162000227565b81146200025257600080fd5b50565b60008151905062000266816200023b565b92915050565b6000620002798262000213565b9050919050565b6200028b816200026c565b81146200029757600080fd5b50565b600081519050620002ab8162000280565b92915050565b60008060408385031215620002cb57620002ca620001ee565b5b6000620002db8582860162000255565b9250506020620002ee858286016200029a565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037a57607f821691505b60208210810362000390576200038f62000332565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003bb565b620004068683620003bb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004536200044d62000447846200041e565b62000428565b6200041e565b9050919050565b6000819050919050565b6200046f8362000432565b620004876200047e826200045a565b848454620003c8565b825550505050565b600090565b6200049e6200048f565b620004ab81848462000464565b505050565b5b81811015620004d357620004c760008262000494565b600181019050620004b1565b5050565b601f8211156200052257620004ec8162000396565b620004f784620003ab565b8101602085101562000507578190505b6200051f6200051685620003ab565b830182620004b0565b50505b505050565b600082821c905092915050565b6000620005476000198460080262000527565b1980831691505092915050565b600062000562838362000534565b9150826002028217905092915050565b6200057d82620002f8565b67ffffffffffffffff81111562000599576200059862000303565b5b620005a5825462000361565b620005b2828285620004d7565b600060209050601f831160018114620005ea5760008415620005d5578287015190505b620005e1858262000554565b86555062000651565b601f198416620005fa8662000396565b60005b828110156200062457848901518255600182019150602085019450602081019050620005fd565b8683101562000644578489015162000640601f89168262000534565b8355505b6001600288020188555050505b505050505050565b60805161190a6200068a600039600081816106b50152818161089d015281816109870152610a59015261190a6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a457c2d711610097578063dde0bc1411610066578063dde0bc14146102fd578063de0e9a3e1461031b578063ea598cb014610337578063f3ad65f41461035357610100565b8063a457c2d71461023d578063a9059cbb1461026d578063b1618a831461029d578063dd62ed3e146102cd57610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef57806395d89b411461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610371565b60405161011a919061107b565b60405180910390f35b61013d60048036038101906101389190611136565b610403565b60405161014a9190611191565b60405180910390f35b61015b610426565b60405161016891906111bb565b60405180910390f35b61018b600480360381019061018691906111d6565b610430565b6040516101989190611191565b60405180910390f35b6101a961045f565b6040516101b69190611245565b60405180910390f35b6101d960048036038101906101d49190611136565b610468565b6040516101e69190611191565b60405180910390f35b61020960048036038101906102049190611260565b61049f565b60405161021691906111bb565b60405180910390f35b6102276104e8565b604051610234919061107b565b60405180910390f35b61025760048036038101906102529190611136565b61057a565b6040516102649190611191565b60405180910390f35b61028760048036038101906102829190611136565b6105f1565b6040516102949190611191565b60405180910390f35b6102b760048036038101906102b29190611260565b610614565b6040516102c491906111bb565b60405180910390f35b6102e760048036038101906102e2919061128d565b61062c565b6040516102f491906111bb565b60405180910390f35b6103056106b3565b604051610312919061132c565b60405180910390f35b61033560048036038101906103309190611347565b6106d7565b005b610351600480360381019061034c9190611347565b61097c565b005b61035b610b44565b6040516103689190611395565b60405180910390f35b606060048054610380906113df565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906113df565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60008061040e610b6a565b905061041b818585610b72565b600191505092915050565b6000600354905090565b60008061043b610b6a565b9050610448858285610ba4565b610453858585610c30565b60019150509392505050565b60006012905090565b600080610473610b6a565b9050610494818585610485858961062c565b61048f919061143f565b610b72565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600580546104f7906113df565b80601f0160208091040260200160405190810160405280929190818152602001828054610523906113df565b80156105705780601f1061054557610100808354040283529160200191610570565b820191906000526020600020905b81548152906001019060200180831161055357829003601f168201915b5050505050905090565b600080610585610b6a565b90506000610593828661062c565b9050838110156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf906114e5565b60405180910390fd5b6105e58286868403610b72565b60019250505092915050565b6000806105fc610b6a565b9050610609818585610c30565b600191505092915050565b60076020528060005260406000206000915090505481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106df610c62565b803073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107199190611514565b602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611544565b1015610792576040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d616b76a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190611586565b73ffffffffffffffffffffffffffffffffffffffff1663f898129e33836040518363ffffffff1660e01b815260040161085f9291906115b3565b600060405180830381600087803b15801561087957600080fd5b505af115801561088d573d6000803e3d6000fd5b5050505061089b3382610cb1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108f69291906115b3565b6020604051808303816000875af1158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611608565b507fbeaa92c6354c6dcf375d2c514352b2c11bc865784722e5dd9b267e606eb5fc5f8160405161096991906111bb565b60405180910390a1610979610e80565b50565b610984610c62565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109de9190611514565b602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190611544565b1015610a57576040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610ab493929190611635565b6020604051808303816000875af1158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af79190611608565b50610b023382610e8a565b7f5b8cd8f3a67af1dee11ad4321a05f79a76cc7ea517810fc56d6d96c1e60d368681604051610b3191906111bb565b60405180910390a1610b41610e80565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6040517ff076ec3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610bb0848461062c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c2a5781811015610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c13906116b8565b60405180910390fd5b610c298484848403610b72565b5b50505050565b6040517fab064ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260005403610ca7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9e90611724565b60405180910390fd5b6002600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d17906117b6565b60405180910390fd5b610d2c82600083610fe1565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa90611848565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6791906111bb565b60405180910390a3610e7b83600084610fe6565b505050565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef0906118b4565b60405180910390fd5b610f0560008383610fe1565b8060036000828254610f17919061143f565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fc991906111bb565b60405180910390a3610fdd60008383610fe6565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561102557808201518184015260208101905061100a565b60008484015250505050565b6000601f19601f8301169050919050565b600061104d82610feb565b6110578185610ff6565b9350611067818560208601611007565b61107081611031565b840191505092915050565b600060208201905081810360008301526110958184611042565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110cd826110a2565b9050919050565b6110dd816110c2565b81146110e857600080fd5b50565b6000813590506110fa816110d4565b92915050565b6000819050919050565b61111381611100565b811461111e57600080fd5b50565b6000813590506111308161110a565b92915050565b6000806040838503121561114d5761114c61109d565b5b600061115b858286016110eb565b925050602061116c85828601611121565b9150509250929050565b60008115159050919050565b61118b81611176565b82525050565b60006020820190506111a66000830184611182565b92915050565b6111b581611100565b82525050565b60006020820190506111d060008301846111ac565b92915050565b6000806000606084860312156111ef576111ee61109d565b5b60006111fd868287016110eb565b935050602061120e868287016110eb565b925050604061121f86828701611121565b9150509250925092565b600060ff82169050919050565b61123f81611229565b82525050565b600060208201905061125a6000830184611236565b92915050565b6000602082840312156112765761127561109d565b5b6000611284848285016110eb565b91505092915050565b600080604083850312156112a4576112a361109d565b5b60006112b2858286016110eb565b92505060206112c3858286016110eb565b9150509250929050565b6000819050919050565b60006112f26112ed6112e8846110a2565b6112cd565b6110a2565b9050919050565b6000611304826112d7565b9050919050565b6000611316826112f9565b9050919050565b6113268161130b565b82525050565b6000602082019050611341600083018461131d565b92915050565b60006020828403121561135d5761135c61109d565b5b600061136b84828501611121565b91505092915050565b600061137f826112f9565b9050919050565b61138f81611374565b82525050565b60006020820190506113aa6000830184611386565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113f757607f821691505b60208210810361140a576114096113b0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061144a82611100565b915061145583611100565b925082820190508082111561146d5761146c611410565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006114cf602583610ff6565b91506114da82611473565b604082019050919050565b600060208201905081810360008301526114fe816114c2565b9050919050565b61150e816110c2565b82525050565b60006020820190506115296000830184611505565b92915050565b60008151905061153e8161110a565b92915050565b60006020828403121561155a5761155961109d565b5b60006115688482850161152f565b91505092915050565b600081519050611580816110d4565b92915050565b60006020828403121561159c5761159b61109d565b5b60006115aa84828501611571565b91505092915050565b60006040820190506115c86000830185611505565b6115d560208301846111ac565b9392505050565b6115e581611176565b81146115f057600080fd5b50565b600081519050611602816115dc565b92915050565b60006020828403121561161e5761161d61109d565b5b600061162c848285016115f3565b91505092915050565b600060608201905061164a6000830186611505565b6116576020830185611505565b61166460408301846111ac565b949350505050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116a2601d83610ff6565b91506116ad8261166c565b602082019050919050565b600060208201905081810360008301526116d181611695565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061170e601f83610ff6565b9150611719826116d8565b602082019050919050565b6000602082019050818103600083015261173d81611701565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006117a0602183610ff6565b91506117ab82611744565b604082019050919050565b600060208201905081810360008301526117cf81611793565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611832602283610ff6565b915061183d826117d6565b604082019050919050565b6000602082019050818103600083015261186181611825565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061189e601f83610ff6565b91506118a982611868565b602082019050919050565b600060208201905081810360008301526118cd81611891565b905091905056fea2646970667358221220ab91e8135e4275f0fd4a33141f1b0072c4d0d42c874fc3a99121b064869953a564736f6c63430008130033";

type PromDaoGovernanceWrapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromDaoGovernanceWrapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromDaoGovernanceWrap__factory extends ContractFactory {
  constructor(...args: PromDaoGovernanceWrapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _prom: PromiseOrValue<string>,
    _addressRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromDaoGovernanceWrap> {
    return super.deploy(
      _prom,
      _addressRegistry,
      overrides || {}
    ) as Promise<PromDaoGovernanceWrap>;
  }
  override getDeployTransaction(
    _prom: PromiseOrValue<string>,
    _addressRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_prom, _addressRegistry, overrides || {});
  }
  override attach(address: string): PromDaoGovernanceWrap {
    return super.attach(address) as PromDaoGovernanceWrap;
  }
  override connect(signer: Signer): PromDaoGovernanceWrap__factory {
    return super.connect(signer) as PromDaoGovernanceWrap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromDaoGovernanceWrapInterface {
    return new utils.Interface(_abi) as PromDaoGovernanceWrapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromDaoGovernanceWrap {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PromDaoGovernanceWrap;
  }
}
