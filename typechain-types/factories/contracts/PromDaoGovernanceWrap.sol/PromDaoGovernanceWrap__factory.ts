/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PromDaoGovernanceWrap,
  PromDaoGovernanceWrapInterface,
} from "../../../contracts/PromDaoGovernanceWrap.sol/PromDaoGovernanceWrap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_prom",
        type: "address",
      },
      {
        internalType: "contract IAddressRegistry",
        name: "_addressRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovesNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughPower",
    type: "error",
  },
  {
    inputs: [],
    name: "TransfersNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unwrapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Wrapped",
    type: "event",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prom",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wrappedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002377380380620023778339818101604052810190620000379190620003e9565b6040518060400160405280601881526020017f50726f6d2046656520496e666c75656e636520506f77657200000000000000008152506040518060400160405280600481526020017f504649500000000000000000000000000000000000000000000000000000000081525060016000819055508160049081620000bc9190620006aa565b508060059081620000ce9190620006aa565b505050620000ed67c8346a3c186115c760c01b6200031860201b60201c565b6200010967bc4bad2a5164171560c01b6200031860201b60201c565b6200012567487a43c71214e28c60c01b6200031860201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480156200017a575062000179673b1df3c366d266fb60c01b6200031b60201b60201c565b5b80620001d75750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015620001d65750620001d567549dac627985ac1960c01b6200031b60201b60201c565b5b5b156200024757620001f9672e80f9e5a2eaceaf60c01b6200031860201b60201c565b620002156706b1fa1173c8d54660c01b6200031860201b60201c565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200026367a3b0914c12cf86da60c01b6200031860201b60201c565b6200027f6778325188b4f6e0c060c01b6200031860201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620002cf6754044efa54c2ca5760c01b6200031860201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000791565b50565b600060019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000358826200032b565b9050919050565b60006200036c826200034b565b9050919050565b6200037e816200035f565b81146200038a57600080fd5b50565b6000815190506200039e8162000373565b92915050565b6000620003b1826200034b565b9050919050565b620003c381620003a4565b8114620003cf57600080fd5b50565b600081519050620003e381620003b8565b92915050565b6000806040838503121562000403576200040262000326565b5b600062000413858286016200038d565b92505060206200042685828601620003d2565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004b257607f821691505b602082108103620004c857620004c76200046a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004f3565b6200053e8683620004f3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200058b620005856200057f8462000556565b62000560565b62000556565b9050919050565b6000819050919050565b620005a7836200056a565b620005bf620005b68262000592565b84845462000500565b825550505050565b600090565b620005d6620005c7565b620005e38184846200059c565b505050565b5b818110156200060b57620005ff600082620005cc565b600181019050620005e9565b5050565b601f8211156200065a576200062481620004ce565b6200062f84620004e3565b810160208510156200063f578190505b620006576200064e85620004e3565b830182620005e8565b50505b505050565b600082821c905092915050565b60006200067f600019846008026200065f565b1980831691505092915050565b60006200069a83836200066c565b9150826002028217905092915050565b620006b58262000430565b67ffffffffffffffff811115620006d157620006d06200043b565b5b620006dd825462000499565b620006ea8282856200060f565b600060209050601f8311600181146200072257600084156200070d578287015190505b6200071985826200068c565b86555062000789565b601f1984166200073286620004ce565b60005b828110156200075c5784890151825560018201915060208501945060208101905062000735565b868310156200077c578489015162000778601f8916826200066c565b8355505b6001600288020188555050505b505050505050565b608051611bb5620007c2600039600081816106b5015281816109b501528181610b2b0152610c610152611bb56000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a457c2d711610097578063dde0bc1411610066578063dde0bc14146102fd578063de0e9a3e1461031b578063ea598cb014610337578063f3ad65f41461035357610100565b8063a457c2d71461023d578063a9059cbb1461026d578063b1618a831461029d578063dd62ed3e146102cd57610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef57806395d89b411461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610371565b60405161011a9190611326565b60405180910390f35b61013d600480360381019061013891906113e1565b610403565b60405161014a919061143c565b60405180910390f35b61015b610426565b6040516101689190611466565b60405180910390f35b61018b60048036038101906101869190611481565b610430565b604051610198919061143c565b60405180910390f35b6101a961045f565b6040516101b691906114f0565b60405180910390f35b6101d960048036038101906101d491906113e1565b610468565b6040516101e6919061143c565b60405180910390f35b6102096004803603810190610204919061150b565b61049f565b6040516102169190611466565b60405180910390f35b6102276104e8565b6040516102349190611326565b60405180910390f35b610257600480360381019061025291906113e1565b61057a565b604051610264919061143c565b60405180910390f35b610287600480360381019061028291906113e1565b6105f1565b604051610294919061143c565b60405180910390f35b6102b760048036038101906102b2919061150b565b610614565b6040516102c49190611466565b60405180910390f35b6102e760048036038101906102e29190611538565b61062c565b6040516102f49190611466565b60405180910390f35b6103056106b3565b60405161031291906115d7565b60405180910390f35b610335600480360381019061033091906115f2565b6106d7565b005b610351600480360381019061034c91906115f2565b610abc565b005b61035b610d9c565b6040516103689190611640565b60405180910390f35b6060600480546103809061168a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac9061168a565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60008061040e610dc2565b905061041b818585610dca565b600191505092915050565b6000600354905090565b60008061043b610dc2565b9050610448858285610e24565b610453858585610eb0565b60019150509392505050565b60006012905090565b600080610473610dc2565b9050610494818585610485858961062c565b61048f91906116ea565b610dca565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600580546104f79061168a565b80601f01602080910402602001604051908101604052809291908181526020018280546105239061168a565b80156105705780601f1061054557610100808354040283529160200191610570565b820191906000526020600020905b81548152906001019060200180831161055357829003601f168201915b5050505050905090565b600080610585610dc2565b90506000610593828661062c565b9050838110156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90611790565b60405180910390fd5b6105e58286868403610dca565b60019250505092915050565b6000806105fc610dc2565b9050610609818585610eb0565b600191505092915050565b60076020528060005260406000206000915090505481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106eb6741461ba66b2b5faa60c01b610f0a565b6106f3610f0d565b61070767a5b5f3d60f9e9b3c60c01b610f0a565b61071b6725776dc651e29b9460c01b610f0a565b61072f671fbf8a06a29fb7f860c01b610f0a565b610743679a24b56090a6da6560c01b610f0a565b803073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161077d91906117bf565b602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be91906117ef565b101561081e576107d867405b345897fa77c460c01b610f0a565b6107ec67b09cbdfb952f2b5a60c01b610f0a565b6040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108326725447bae7718a98360c01b610f0a565b61084667321780712de9f96a60c01b610f0a565b61085a6788b5ce1fba5ad04260c01b610f0a565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d616b76a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190611831565b73ffffffffffffffffffffffffffffffffffffffff1663f898129e33836040518363ffffffff1660e01b815260040161092792919061185e565b600060405180830381600087803b15801561094157600080fd5b505af1158015610955573d6000803e3d6000fd5b5050505061096d67d8b1a68f7b429ee660c01b610f0a565b61098167f4c7ddebdccd6af860c01b610f0a565b61098b3382610f5c565b61099f677c170d4607a9bb8c60c01b610f0a565b6109b3671076753ea427466d60c01b610f0a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a0e92919061185e565b6020604051808303816000875af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5191906118b3565b50610a6667f58bbed5359ac52960c01b610f0a565b610a7a67a2e0ab237fe6028260c01b610f0a565b7fbeaa92c6354c6dcf375d2c514352b2c11bc865784722e5dd9b267e606eb5fc5f81604051610aa99190611466565b60405180910390a1610ab961112b565b50565b610ad067f5a5a06027f475fd60c01b610f0a565b610ad8610f0d565b610aec67fa2423379aa0a1c660c01b610f0a565b610b0067d5a8a2f02f32ae4460c01b610f0a565b610b14676cf24a03b5f1588560c01b610f0a565b610b2867f3c467405b6c055f60c01b610f0a565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b8291906117bf565b602060405180830381865afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc391906117ef565b1015610c2357610bdd67d5e6102b1c85b47f60c01b610f0a565b610bf1676ab5840b20fa54f360c01b610f0a565b6040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c37672aeae8b601f4dd2c60c01b610f0a565b610c4b678aa0744ad4c74db360c01b610f0a565b610c5f6779f192008a32a37360c01b610f0a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cbc939291906118e0565b6020604051808303816000875af1158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cff91906118b3565b50610d1467b4b84d68892f860f60c01b610f0a565b610d2867124fb746be9e467e60c01b610f0a565b610d323382611135565b610d4667ae6210ef17212c5a60c01b610f0a565b610d5a6736b7bf337a805ca860c01b610f0a565b7f5b8cd8f3a67af1dee11ad4321a05f79a76cc7ea517810fc56d6d96c1e60d368681604051610d899190611466565b60405180910390a1610d9961112b565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b610dde674cfe4b074442268460c01b610f0a565b610df26718e268fbc7297f9a60c01b610f0a565b6040517ff076ec3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e30848461062c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610eaa5781811015610e9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9390611963565b60405180910390fd5b610ea98484848403610dca565b5b50505050565b610ec46770dc56983e54f42260c01b610f0a565b610ed8677ae01376a7294ec160c01b610f0a565b6040517fab064ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600260005403610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f49906119cf565b60405180910390fd5b6002600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc290611a61565b60405180910390fd5b610fd78260008361128c565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590611af3565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111129190611466565b60405180910390a361112683600084611291565b505050565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119b90611b5f565b60405180910390fd5b6111b06000838361128c565b80600360008282546111c291906116ea565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112749190611466565b60405180910390a361128860008383611291565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112d05780820151818401526020810190506112b5565b60008484015250505050565b6000601f19601f8301169050919050565b60006112f882611296565b61130281856112a1565b93506113128185602086016112b2565b61131b816112dc565b840191505092915050565b6000602082019050818103600083015261134081846112ed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113788261134d565b9050919050565b6113888161136d565b811461139357600080fd5b50565b6000813590506113a58161137f565b92915050565b6000819050919050565b6113be816113ab565b81146113c957600080fd5b50565b6000813590506113db816113b5565b92915050565b600080604083850312156113f8576113f7611348565b5b600061140685828601611396565b9250506020611417858286016113cc565b9150509250929050565b60008115159050919050565b61143681611421565b82525050565b6000602082019050611451600083018461142d565b92915050565b611460816113ab565b82525050565b600060208201905061147b6000830184611457565b92915050565b60008060006060848603121561149a57611499611348565b5b60006114a886828701611396565b93505060206114b986828701611396565b92505060406114ca868287016113cc565b9150509250925092565b600060ff82169050919050565b6114ea816114d4565b82525050565b600060208201905061150560008301846114e1565b92915050565b60006020828403121561152157611520611348565b5b600061152f84828501611396565b91505092915050565b6000806040838503121561154f5761154e611348565b5b600061155d85828601611396565b925050602061156e85828601611396565b9150509250929050565b6000819050919050565b600061159d6115986115938461134d565b611578565b61134d565b9050919050565b60006115af82611582565b9050919050565b60006115c1826115a4565b9050919050565b6115d1816115b6565b82525050565b60006020820190506115ec60008301846115c8565b92915050565b60006020828403121561160857611607611348565b5b6000611616848285016113cc565b91505092915050565b600061162a826115a4565b9050919050565b61163a8161161f565b82525050565b60006020820190506116556000830184611631565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116a257607f821691505b6020821081036116b5576116b461165b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116f5826113ab565b9150611700836113ab565b9250828201905080821115611718576117176116bb565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061177a6025836112a1565b91506117858261171e565b604082019050919050565b600060208201905081810360008301526117a98161176d565b9050919050565b6117b98161136d565b82525050565b60006020820190506117d460008301846117b0565b92915050565b6000815190506117e9816113b5565b92915050565b60006020828403121561180557611804611348565b5b6000611813848285016117da565b91505092915050565b60008151905061182b8161137f565b92915050565b60006020828403121561184757611846611348565b5b60006118558482850161181c565b91505092915050565b600060408201905061187360008301856117b0565b6118806020830184611457565b9392505050565b61189081611421565b811461189b57600080fd5b50565b6000815190506118ad81611887565b92915050565b6000602082840312156118c9576118c8611348565b5b60006118d78482850161189e565b91505092915050565b60006060820190506118f560008301866117b0565b61190260208301856117b0565b61190f6040830184611457565b949350505050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061194d601d836112a1565b915061195882611917565b602082019050919050565b6000602082019050818103600083015261197c81611940565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006119b9601f836112a1565b91506119c482611983565b602082019050919050565b600060208201905081810360008301526119e8816119ac565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a4b6021836112a1565b9150611a56826119ef565b604082019050919050565b60006020820190508181036000830152611a7a81611a3e565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611add6022836112a1565b9150611ae882611a81565b604082019050919050565b60006020820190508181036000830152611b0c81611ad0565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611b49601f836112a1565b9150611b5482611b13565b602082019050919050565b60006020820190508181036000830152611b7881611b3c565b905091905056fea2646970667358221220639805f3db97730ce2654910dc5e35aeb9d9337f633b457277542e8193e1f6ba64736f6c63430008130033";

type PromDaoGovernanceWrapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromDaoGovernanceWrapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromDaoGovernanceWrap__factory extends ContractFactory {
  constructor(...args: PromDaoGovernanceWrapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _prom: PromiseOrValue<string>,
    _addressRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromDaoGovernanceWrap> {
    return super.deploy(
      _prom,
      _addressRegistry,
      overrides || {}
    ) as Promise<PromDaoGovernanceWrap>;
  }
  override getDeployTransaction(
    _prom: PromiseOrValue<string>,
    _addressRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_prom, _addressRegistry, overrides || {});
  }
  override attach(address: string): PromDaoGovernanceWrap {
    return super.attach(address) as PromDaoGovernanceWrap;
  }
  override connect(signer: Signer): PromDaoGovernanceWrap__factory {
    return super.connect(signer) as PromDaoGovernanceWrap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromDaoGovernanceWrapInterface {
    return new utils.Interface(_abi) as PromDaoGovernanceWrapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromDaoGovernanceWrap {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PromDaoGovernanceWrap;
  }
}
