/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PromDaoGovernanceWrap,
  PromDaoGovernanceWrapInterface,
} from "../../contracts/PromDaoGovernanceWrap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_prom",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovesNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughPower",
    type: "error",
  },
  {
    inputs: [],
    name: "TransfersNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unwrapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Wrapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prom",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wrappedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001cf338038062001cf38339818101604052810190620000379190620001f1565b6040518060400160405280601881526020017f50726f6d2046656520496e666c75656e636520506f77657200000000000000008152506040518060400160405280600481526020017f504649500000000000000000000000000000000000000000000000000000000081525060016000819055508160049081620000bc91906200049d565b508060059081620000ce91906200049d565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000138576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000584565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a58262000178565b9050919050565b6000620001b98262000198565b9050919050565b620001cb81620001ac565b8114620001d757600080fd5b50565b600081519050620001eb81620001c0565b92915050565b6000602082840312156200020a576200020962000173565b5b60006200021a84828501620001da565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002a557607f821691505b602082108103620002bb57620002ba6200025d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002e6565b620003318683620002e6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200037e62000378620003728462000349565b62000353565b62000349565b9050919050565b6000819050919050565b6200039a836200035d565b620003b2620003a98262000385565b848454620002f3565b825550505050565b600090565b620003c9620003ba565b620003d68184846200038f565b505050565b5b81811015620003fe57620003f2600082620003bf565b600181019050620003dc565b5050565b601f8211156200044d576200041781620002c1565b6200042284620002d6565b8101602085101562000432578190505b6200044a6200044185620002d6565b830182620003db565b50505b505050565b600082821c905092915050565b6000620004726000198460080262000452565b1980831691505092915050565b60006200048d83836200045f565b9150826002028217905092915050565b620004a88262000223565b67ffffffffffffffff811115620004c457620004c36200022e565b5b620004d082546200028c565b620004dd82828562000402565b600060209050601f83116001811462000515576000841562000500578287015190505b6200050c85826200047f565b8655506200057c565b601f1984166200052586620002c1565b60005b828110156200054f5784890151825560018201915060208501945060208101905062000528565b868310156200056f57848901516200056b601f8916826200045f565b8355505b6001600288020188555050505b505050505050565b60805161173e620005b56000396000818161068c015281816107750152818161085f0152610931015261173e6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806395d89b4111610097578063dd62ed3e11610066578063dd62ed3e146102c2578063dde0bc14146102f2578063de0e9a3e14610310578063ea598cb01461032c576100f5565b806395d89b4114610214578063a457c2d714610232578063a9059cbb14610262578063b1618a8314610292576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610348565b60405161010f9190610f2d565b60405180910390f35b610132600480360381019061012d9190610fe8565b6103da565b60405161013f9190611043565b60405180910390f35b6101506103fd565b60405161015d919061106d565b60405180910390f35b610180600480360381019061017b9190611088565b610407565b60405161018d9190611043565b60405180910390f35b61019e610436565b6040516101ab91906110f7565b60405180910390f35b6101ce60048036038101906101c99190610fe8565b61043f565b6040516101db9190611043565b60405180910390f35b6101fe60048036038101906101f99190611112565b610476565b60405161020b919061106d565b60405180910390f35b61021c6104bf565b6040516102299190610f2d565b60405180910390f35b61024c60048036038101906102479190610fe8565b610551565b6040516102599190611043565b60405180910390f35b61027c60048036038101906102779190610fe8565b6105c8565b6040516102899190611043565b60405180910390f35b6102ac60048036038101906102a79190611112565b6105eb565b6040516102b9919061106d565b60405180910390f35b6102dc60048036038101906102d7919061113f565b610603565b6040516102e9919061106d565b60405180910390f35b6102fa61068a565b60405161030791906111de565b60405180910390f35b61032a600480360381019061032591906111f9565b6106ae565b005b610346600480360381019061034191906111f9565b610854565b005b60606004805461035790611255565b80601f016020809104026020016040519081016040528092919081815260200182805461038390611255565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b6000806103e5610a1c565b90506103f2818585610a24565b600191505092915050565b6000600354905090565b600080610412610a1c565b905061041f858285610a56565b61042a858585610ae2565b60019150509392505050565b60006012905090565b60008061044a610a1c565b905061046b81858561045c8589610603565b61046691906112b5565b610a24565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600580546104ce90611255565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611255565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60008061055c610a1c565b9050600061056a8286610603565b9050838110156105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a69061135b565b60405180910390fd5b6105bc8286868403610a24565b60019250505092915050565b6000806105d3610a1c565b90506105e0818585610ae2565b600191505092915050565b60066020528060005260406000206000915090505481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106b6610b14565b803073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106f0919061138a565b602060405180830381865afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073191906113ba565b1015610769576040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107733382610b63565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107ce9291906113e7565b6020604051808303816000875af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610811919061143c565b507fbeaa92c6354c6dcf375d2c514352b2c11bc865784722e5dd9b267e606eb5fc5f81604051610841919061106d565b60405180910390a1610851610d32565b50565b61085c610b14565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108b6919061138a565b602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f791906113ba565b101561092f576040517ff65faf4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161098c93929190611469565b6020604051808303816000875af11580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf919061143c565b506109da3382610d3c565b7f5b8cd8f3a67af1dee11ad4321a05f79a76cc7ea517810fc56d6d96c1e60d368681604051610a09919061106d565b60405180910390a1610a19610d32565b50565b600033905090565b6040517ff076ec3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a628484610603565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610adc5781811015610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac5906114ec565b60405180910390fd5b610adb8484848403610a24565b5b50505050565b6040517fab064ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260005403610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5090611558565b60405180910390fd5b6002600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc9906115ea565b60405180910390fd5b610bde82600083610e93565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c9061167c565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d19919061106d565b60405180910390a3610d2d83600084610e98565b505050565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da2906116e8565b60405180910390fd5b610db760008383610e93565b8060036000828254610dc991906112b5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e7b919061106d565b60405180910390a3610e8f60008383610e98565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed7578082015181840152602081019050610ebc565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eff82610e9d565b610f098185610ea8565b9350610f19818560208601610eb9565b610f2281610ee3565b840191505092915050565b60006020820190508181036000830152610f478184610ef4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7f82610f54565b9050919050565b610f8f81610f74565b8114610f9a57600080fd5b50565b600081359050610fac81610f86565b92915050565b6000819050919050565b610fc581610fb2565b8114610fd057600080fd5b50565b600081359050610fe281610fbc565b92915050565b60008060408385031215610fff57610ffe610f4f565b5b600061100d85828601610f9d565b925050602061101e85828601610fd3565b9150509250929050565b60008115159050919050565b61103d81611028565b82525050565b60006020820190506110586000830184611034565b92915050565b61106781610fb2565b82525050565b6000602082019050611082600083018461105e565b92915050565b6000806000606084860312156110a1576110a0610f4f565b5b60006110af86828701610f9d565b93505060206110c086828701610f9d565b92505060406110d186828701610fd3565b9150509250925092565b600060ff82169050919050565b6110f1816110db565b82525050565b600060208201905061110c60008301846110e8565b92915050565b60006020828403121561112857611127610f4f565b5b600061113684828501610f9d565b91505092915050565b6000806040838503121561115657611155610f4f565b5b600061116485828601610f9d565b925050602061117585828601610f9d565b9150509250929050565b6000819050919050565b60006111a461119f61119a84610f54565b61117f565b610f54565b9050919050565b60006111b682611189565b9050919050565b60006111c8826111ab565b9050919050565b6111d8816111bd565b82525050565b60006020820190506111f360008301846111cf565b92915050565b60006020828403121561120f5761120e610f4f565b5b600061121d84828501610fd3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061126d57607f821691505b6020821081036112805761127f611226565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112c082610fb2565b91506112cb83610fb2565b92508282019050808211156112e3576112e2611286565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611345602583610ea8565b9150611350826112e9565b604082019050919050565b6000602082019050818103600083015261137481611338565b9050919050565b61138481610f74565b82525050565b600060208201905061139f600083018461137b565b92915050565b6000815190506113b481610fbc565b92915050565b6000602082840312156113d0576113cf610f4f565b5b60006113de848285016113a5565b91505092915050565b60006040820190506113fc600083018561137b565b611409602083018461105e565b9392505050565b61141981611028565b811461142457600080fd5b50565b60008151905061143681611410565b92915050565b60006020828403121561145257611451610f4f565b5b600061146084828501611427565b91505092915050565b600060608201905061147e600083018661137b565b61148b602083018561137b565b611498604083018461105e565b949350505050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114d6601d83610ea8565b91506114e1826114a0565b602082019050919050565b60006020820190508181036000830152611505816114c9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611542601f83610ea8565b915061154d8261150c565b602082019050919050565b6000602082019050818103600083015261157181611535565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006115d4602183610ea8565b91506115df82611578565b604082019050919050565b60006020820190508181036000830152611603816115c7565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611666602283610ea8565b91506116718261160a565b604082019050919050565b6000602082019050818103600083015261169581611659565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006116d2601f83610ea8565b91506116dd8261169c565b602082019050919050565b60006020820190508181036000830152611701816116c5565b905091905056fea26469706673582212207e609badf9bfb14d7ae68e7a9ddfb39bf74a638aab17cd14e328fa95cb03d9e864736f6c63430008130033";

type PromDaoGovernanceWrapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromDaoGovernanceWrapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromDaoGovernanceWrap__factory extends ContractFactory {
  constructor(...args: PromDaoGovernanceWrapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _prom: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromDaoGovernanceWrap> {
    return super.deploy(
      _prom,
      overrides || {}
    ) as Promise<PromDaoGovernanceWrap>;
  }
  override getDeployTransaction(
    _prom: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_prom, overrides || {});
  }
  override attach(address: string): PromDaoGovernanceWrap {
    return super.attach(address) as PromDaoGovernanceWrap;
  }
  override connect(signer: Signer): PromDaoGovernanceWrap__factory {
    return super.connect(signer) as PromDaoGovernanceWrap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromDaoGovernanceWrapInterface {
    return new utils.Interface(_abi) as PromDaoGovernanceWrapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromDaoGovernanceWrap {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PromDaoGovernanceWrap;
  }
}
