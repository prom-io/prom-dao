/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PromFieldSettingDao,
  PromFieldSettingDaoInterface,
} from "../../../contracts/PromFeesDao.sol/PromFieldSettingDao";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialVotesThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExpiredProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "IneligibleImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCleanse",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "targetFee",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "FeeProposalImplemented",
    type: "event",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_targetPlatformFee",
        type: "uint16",
      },
    ],
    name: "createFeeUpdateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposalIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "downvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getAllParticipatedProposalsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOngoingProposals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "implementProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposal",
    outputs: [
      {
        internalType: "uint256",
        name: "deadlineTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "targetPlatformFee",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalDownvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalUpvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "upvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votesThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200259938038062002599833981810160405281019062000037919062000162565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550600260008154809291906200009c90620001d8565b9190505550505062000225565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000db82620000ae565b9050919050565b6000620000ef82620000ce565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b6000819050919050565b6200013c8162000127565b81146200014857600080fd5b50565b6000815190506200015c8162000131565b92915050565b600080604083850312156200017c576200017b620000a9565b5b60006200018c8582860162000110565b92505060206200019f858286016200014b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001e58262000127565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200021a5762000219620001a9565b5b600182019050919050565b61236480620002356000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063837f28331161008c578063ef64794d11610066578063ef64794d1461024f578063f31fdad41461027f578063f3ad65f41461029b578063f898129e146102b9576100ea565b8063837f2833146101e5578063973a55da14610215578063afe666f614610231576100ea565b806338f2e175116100c857806338f2e1751461015f5780635cd08d4d1461017d578063681321a814610199578063780569b3146101c9576100ea565b806301ddf070146100ef57806330326c171461010b57806331835fb814610141575b600080fd5b61010960048036038101906101049190611c3e565b6102d5565b005b61012560048036038101906101209190611c3e565b61060b565b6040516101389796959493929190611cd8565b60405180910390f35b6101496106bb565b6040516101569190611d47565b60405180910390f35b6101676106c1565b6040516101749190611d47565b60405180910390f35b61019760048036038101906101929190611d8e565b6106c7565b005b6101b360048036038101906101ae9190611de1565b610814565b6040516101c09190611d47565b60405180910390f35b6101e360048036038101906101de9190611e4d565b610839565b005b6101ff60048036038101906101fa9190611e8d565b610aae565b60405161020c9190611f78565b60405180910390f35b61022f600480360381019061022a9190611c3e565b610d58565b005b6102396110d7565b6040516102469190611f78565b60405180910390f35b61026960048036038101906102649190611de1565b61124f565b6040516102769190611d47565b60405180910390f35b61029960048036038101906102949190611c3e565b611274565b005b6102a36115aa565b6040516102b09190611ff9565b60405180910390f35b6102d360048036038101906102ce9190611de1565b6115d0565b005b6102dd611764565b80426004600083815260200190815260200160002060000154101561032e576040517f6496c42000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190612029565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103fb9190612056565b602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190612086565b90506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205490506000811115610520576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508060046000868152602001908152602001600020600501600082825461051891906120e2565b925050819055505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020548261057c91906120e2565b6004600086815260200190815260200160002060040160008282546105a19190612116565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055505050506106086117b3565b50565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900461ffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905087565b60025481565b60035481565b6106cf611764565b82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190612029565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fb578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fa576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6108068484846117bd565b5061080f6117b3565b505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b610841611764565b6040518060e00160405280621275004261085b9190612116565b8152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffcf6fd86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190612029565b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152506004600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005015590505060026000815480929190610a9d9061214a565b9190505550610aaa6117b3565b5050565b60606000610aba6110d7565b90506000815167ffffffffffffffff811115610ad957610ad8612192565b5b604051908082528060200260200182016040528015610b075781602001602082028036833780820191505090505b5090506000805b8351811015610ca5576000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868481518110610b6d57610b6c6121c1565b5b602002602001015181526020019081526020016000205414610bd657838181518110610b9c57610b9b6121c1565b5b6020026020010151838381518110610bb757610bb66121c1565b5b6020026020010181815250508180610bce9061214a565b925050610c92565b6000600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868481518110610c2c57610c2b6121c1565b5b602002602001015181526020019081526020016000205414610c9157838181518110610c5b57610c5a6121c1565b5b6020026020010151838381518110610c7657610c756121c1565b5b6020026020010181815250508180610c8d9061214a565b9250505b5b8080610c9d9061214a565b915050610b0e565b5060008167ffffffffffffffff811115610cc257610cc1612192565b5b604051908082528060200260200182016040528015610cf05781602001602082028036833780820191505090505b50905060005b82811015610d4b57838181518110610d1157610d106121c1565b5b6020026020010151828281518110610d2c57610d2b6121c1565b5b6020026020010181815250508080610d439061214a565b915050610cf6565b5080945050505050919050565b610d60611764565b6000600460008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900461ffff1661ffff1661ffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505090508060c001518160a001511080610eec57506003548160c001518260a00151610eea91906120e2565b105b15610f23576040517f20ff97d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306d2033f826040015183606001516040518363ffffffff1660e01b8152600401610f889291906121f0565b600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050507fe9312a92d5a31be2222bd01d5fc1b0aa41cb18f779ee1422b83c06ebdc06d9d1828260400151836060015184608001518560a001518660c0015160035460405161100b9796959493929190612219565b60405180910390a1600460008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549061ffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905560058201600090555050506110d46117b3565b50565b6060600060025490506000808267ffffffffffffffff8111156110fd576110fc612192565b5b60405190808252806020026020018201604052801561112b5781602001602082028036833780820191505090505b5090505b6000831461119f57828061114290612288565b935050600460008481526020019081526020016000206000015442116111955782818381518110611176576111756121c1565b5b602002602001018181525050818061118d9061214a565b92505061119a565b61119f565b61112f565b60008267ffffffffffffffff8111156111bb576111ba612192565b5b6040519080825280602002602001820160405280156111e95781602001602082028036833780820191505090505b50905060005b838110156112445782818151811061120a576112096121c1565b5b6020026020010151828281518110611225576112246121c1565b5b602002602001018181525050808061123c9061214a565b9150506111ef565b508094505050505090565b6005602052816000526040600020602052806000526040600020600091509150505481565b61127c611764565b8042600460008381526020019081526020016000206000015410156112cd576040517f6496c42000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561133e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113629190612029565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161139a9190612056565b602060405180830381865afa1580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190612086565b90506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054905060008111156114bf576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002081905550806004600086815260200190815260200160002060040160008282546114b791906120e2565b925050819055505b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020548261151b91906120e2565b6004600086815260200190815260200160002060050160008282546115409190612116565b9250508190555081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055505050506115a76117b3565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115d8611764565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c9190612029565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611704578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611703576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600061170f84610aae565b905060005b81518110156117555761174285838381518110611734576117336121c1565b5b6020026020010151866117bd565b808061174d9061214a565b915050611714565b5050506117606117b3565b5050565b6002600054036117a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a09061230e565b60405180910390fd5b6002600081905550565b6001600081905550565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054146119df57600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000205481111561194557600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020546004600084815260200190815260200160002060050160008282546118e391906120e2565b925050819055506000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506119da565b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546119a591906120e2565b92505081905550806004600084815260200190815260200160002060050160008282546119d291906120e2565b925050819055505b611bfe565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414611bfd57600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115611b6757600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054600460008481526020019081526020016000206004016000828254611b0591906120e2565b925050819055506000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550611bfc565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611bc791906120e2565b9250508190555080600460008481526020019081526020016000206004016000828254611bf491906120e2565b925050819055505b5b5b505050565b600080fd5b6000819050919050565b611c1b81611c08565b8114611c2657600080fd5b50565b600081359050611c3881611c12565b92915050565b600060208284031215611c5457611c53611c03565b5b6000611c6284828501611c29565b91505092915050565b611c7481611c08565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ca582611c7a565b9050919050565b611cb581611c9a565b82525050565b600061ffff82169050919050565b611cd281611cbb565b82525050565b600060e082019050611ced600083018a611c6b565b611cfa6020830189611cac565b611d076040830188611cac565b611d146060830187611cc9565b611d216080830186611cac565b611d2e60a0830185611c6b565b611d3b60c0830184611c6b565b98975050505050505050565b6000602082019050611d5c6000830184611c6b565b92915050565b611d6b81611c9a565b8114611d7657600080fd5b50565b600081359050611d8881611d62565b92915050565b600080600060608486031215611da757611da6611c03565b5b6000611db586828701611d79565b9350506020611dc686828701611c29565b9250506040611dd786828701611c29565b9150509250925092565b60008060408385031215611df857611df7611c03565b5b6000611e0685828601611d79565b9250506020611e1785828601611c29565b9150509250929050565b611e2a81611cbb565b8114611e3557600080fd5b50565b600081359050611e4781611e21565b92915050565b60008060408385031215611e6457611e63611c03565b5b6000611e7285828601611d79565b9250506020611e8385828601611e38565b9150509250929050565b600060208284031215611ea357611ea2611c03565b5b6000611eb184828501611d79565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611eef81611c08565b82525050565b6000611f018383611ee6565b60208301905092915050565b6000602082019050919050565b6000611f2582611eba565b611f2f8185611ec5565b9350611f3a83611ed6565b8060005b83811015611f6b578151611f528882611ef5565b9750611f5d83611f0d565b925050600181019050611f3e565b5085935050505092915050565b60006020820190508181036000830152611f928184611f1a565b905092915050565b6000819050919050565b6000611fbf611fba611fb584611c7a565b611f9a565b611c7a565b9050919050565b6000611fd182611fa4565b9050919050565b6000611fe382611fc6565b9050919050565b611ff381611fd8565b82525050565b600060208201905061200e6000830184611fea565b92915050565b60008151905061202381611d62565b92915050565b60006020828403121561203f5761203e611c03565b5b600061204d84828501612014565b91505092915050565b600060208201905061206b6000830184611cac565b92915050565b60008151905061208081611c12565b92915050565b60006020828403121561209c5761209b611c03565b5b60006120aa84828501612071565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120ed82611c08565b91506120f883611c08565b92508282039050818111156121105761210f6120b3565b5b92915050565b600061212182611c08565b915061212c83611c08565b9250828201905080821115612144576121436120b3565b5b92915050565b600061215582611c08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612187576121866120b3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506122056000830185611cac565b6122126020830184611cc9565b9392505050565b600060e08201905061222e600083018a611c6b565b61223b6020830189611cac565b6122486040830188611cc9565b6122556060830187611cac565b6122626080830186611c6b565b61226f60a0830185611c6b565b61227c60c0830184611c6b565b98975050505050505050565b600061229382611c08565b9150600082036122a6576122a56120b3565b5b600182039050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006122f8601f836122b1565b9150612303826122c2565b602082019050919050565b60006020820190508181036000830152612327816122eb565b905091905056fea2646970667358221220ae38528c97bbe4793ce9813e74e62bb60dc448f89543b04063164de82b55e4a964736f6c63430008130033";

type PromFieldSettingDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromFieldSettingDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromFieldSettingDao__factory extends ContractFactory {
  constructor(...args: PromFieldSettingDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromFieldSettingDao> {
    return super.deploy(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    ) as Promise<PromFieldSettingDao>;
  }
  override getDeployTransaction(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    );
  }
  override attach(address: string): PromFieldSettingDao {
    return super.attach(address) as PromFieldSettingDao;
  }
  override connect(signer: Signer): PromFieldSettingDao__factory {
    return super.connect(signer) as PromFieldSettingDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromFieldSettingDaoInterface {
    return new utils.Interface(_abi) as PromFieldSettingDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromFieldSettingDao {
    return new Contract(address, _abi, signerOrProvider) as PromFieldSettingDao;
  }
}
