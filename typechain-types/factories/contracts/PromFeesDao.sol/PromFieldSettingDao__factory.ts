/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PromFieldSettingDao,
  PromFieldSettingDaoInterface,
} from "../../../contracts/PromFeesDao.sol/PromFieldSettingDao";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialVotesThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IneligibleImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCleanse",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "targetFee",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "FeeProposalImplemented",
    type: "event",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_targetPlatformFee",
        type: "uint16",
      },
    ],
    name: "createFeeUpdateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposalIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "downvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllParticipatedProposalsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "participatedIndexes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOngoingProposals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ongoingProposals",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "implementProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposal",
    outputs: [
      {
        internalType: "uint256",
        name: "deadlineTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "targetPlatformFee",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalDownvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalUpvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "upvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votesThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9638038062001e96833981810160405281019062000037919062000148565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060038190555050506200018f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000c18262000094565b9050919050565b6000620000d582620000b4565b9050919050565b620000e781620000c8565b8114620000f357600080fd5b50565b6000815190506200010781620000dc565b92915050565b6000819050919050565b62000122816200010d565b81146200012e57600080fd5b50565b600081519050620001428162000117565b92915050565b600080604083850312156200016257620001616200008f565b5b60006200017285828601620000f6565b9250506020620001858582860162000131565b9150509250929050565b611cf7806200019f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063780569b31161008c578063ef64794d11610066578063ef64794d1461023d578063f31fdad41461026d578063f3ad65f414610289578063f898129e146102a7576100ea565b8063780569b3146101e7578063973a55da14610203578063afe666f61461021f576100ea565b806338f2e175116100c857806338f2e1751461015f57806357080d0c1461017d5780635cd08d4d1461019b578063681321a8146101b7576100ea565b806301ddf070146100ef57806330326c171461010b57806331835fb814610141575b600080fd5b6101096004803603810190610104919061162d565b6102c3565b005b6101256004803603810190610120919061162d565b61048c565b60405161013897969594939291906116c7565b60405180910390f35b61014961053c565b6040516101569190611736565b60405180910390f35b610167610542565b6040516101749190611736565b60405180910390f35b610185610548565b604051610192919061180f565b60405180910390f35b6101b560048036038101906101b0919061185d565b6106f7565b005b6101d160048036038101906101cc91906118b0565b610844565b6040516101de9190611736565b60405180910390f35b61020160048036038101906101fc919061191c565b610869565b005b61021d6004803603810190610218919061162d565b610ade565b005b610227610e5d565b604051610234919061180f565b60405180910390f35b610257600480360381019061025291906118b0565b610f0a565b6040516102649190611736565b60405180910390f35b6102876004803603810190610282919061162d565b610f2f565b005b6102916110f8565b60405161029e91906119bb565b60405180910390f35b6102c160048036038101906102bc91906118b0565b61111e565b005b6102cb6112b1565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906119eb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103ec9190611a18565b602060405180830381865afa158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d9190611a48565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550610489611300565b50565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900461ffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905087565b60025481565b60035481565b60606000610554610e5d565b90506000805b82518110156106f1576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008584815181106105b9576105b8611a75565b5b602002602001015181526020019081526020016000205414610622578281815181106105e8576105e7611a75565b5b602002602001015184838151811061060357610602611a75565b5b602002602001018181525050818061061a90611ad3565b9250506106de565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085848151811061067857610677611a75565b5b6020026020010151815260200190815260200160002054146106dd578281815181106106a7576106a6611a75565b5b60200260200101518483815181106106c2576106c1611a75565b5b60200260200101818152505081806106d990611ad3565b9250505b5b80806106e990611ad3565b91505061055a565b50505090565b6106ff6112b1565b82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561076f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079391906119eb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082b578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082a576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61083684848461130a565b5061083f611300565b505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6108716112b1565b6040518060e00160405280621275004261088b9190611b1b565b8152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffcf6fd86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092391906119eb565b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152506004600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005015590505060026000815480929190610acd90611ad3565b9190505550610ada611300565b5050565b610ae66112b1565b6000600460008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900461ffff1661ffff1661ffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505090508060c001518160a001511080610c7257506003548160c001518260a00151610c709190611b4f565b105b15610ca9576040517f20ff97d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306d2033f826040015183606001516040518363ffffffff1660e01b8152600401610d0e929190611b83565b600060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050507fe9312a92d5a31be2222bd01d5fc1b0aa41cb18f779ee1422b83c06ebdc06d9d1828260400151836060015184608001518560a001518660c00151600354604051610d919796959493929190611bac565b60405180910390a1600460008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549061ffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160009055505050610e5a611300565b50565b606060006002549050600080821115610f05575b60008214610f04578180610e8490611c1b565b9250506004600083815260200190815260200160002060000154421180610ec257506000600460008481526020019081526020016000206000015414155b15610efa5781838281518110610edb57610eda611a75565b5b6020026020010181815250508080610ef290611ad3565b915050610eff565b610f04565b610e71565b5b505090565b6005602052816000526040600020602052806000526040600020600091509150505481565b610f376112b1565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102091906119eb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016110589190611a18565b602060405180830381865afa158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611a48565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506110f5611300565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111266112b1565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba91906119eb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611252578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611251576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600061125c610548565b905060005b81518110156112a25761128f8583838151811061128157611280611a75565b5b60200260200101518661130a565b808061129a90611ad3565b915050611261565b5050506112ad611300565b5050565b6002600054036112f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ed90611ca1565b60405180910390fd5b6002600081905550565b6001600081905550565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541461147d57600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115611411576000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546114719190611b4f565b925050819055506115ed565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054146115ec57600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115611584576000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055505b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546115e49190611b4f565b925050819055505b5b505050565b600080fd5b6000819050919050565b61160a816115f7565b811461161557600080fd5b50565b60008135905061162781611601565b92915050565b600060208284031215611643576116426115f2565b5b600061165184828501611618565b91505092915050565b611663816115f7565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061169482611669565b9050919050565b6116a481611689565b82525050565b600061ffff82169050919050565b6116c1816116aa565b82525050565b600060e0820190506116dc600083018a61165a565b6116e9602083018961169b565b6116f6604083018861169b565b61170360608301876116b8565b611710608083018661169b565b61171d60a083018561165a565b61172a60c083018461165a565b98975050505050505050565b600060208201905061174b600083018461165a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611786816115f7565b82525050565b6000611798838361177d565b60208301905092915050565b6000602082019050919050565b60006117bc82611751565b6117c6818561175c565b93506117d18361176d565b8060005b838110156118025781516117e9888261178c565b97506117f4836117a4565b9250506001810190506117d5565b5085935050505092915050565b6000602082019050818103600083015261182981846117b1565b905092915050565b61183a81611689565b811461184557600080fd5b50565b60008135905061185781611831565b92915050565b600080600060608486031215611876576118756115f2565b5b600061188486828701611848565b935050602061189586828701611618565b92505060406118a686828701611618565b9150509250925092565b600080604083850312156118c7576118c66115f2565b5b60006118d585828601611848565b92505060206118e685828601611618565b9150509250929050565b6118f9816116aa565b811461190457600080fd5b50565b600081359050611916816118f0565b92915050565b60008060408385031215611933576119326115f2565b5b600061194185828601611848565b925050602061195285828601611907565b9150509250929050565b6000819050919050565b600061198161197c61197784611669565b61195c565b611669565b9050919050565b600061199382611966565b9050919050565b60006119a582611988565b9050919050565b6119b58161199a565b82525050565b60006020820190506119d060008301846119ac565b92915050565b6000815190506119e581611831565b92915050565b600060208284031215611a0157611a006115f2565b5b6000611a0f848285016119d6565b91505092915050565b6000602082019050611a2d600083018461169b565b92915050565b600081519050611a4281611601565b92915050565b600060208284031215611a5e57611a5d6115f2565b5b6000611a6c84828501611a33565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ade826115f7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b1057611b0f611aa4565b5b600182019050919050565b6000611b26826115f7565b9150611b31836115f7565b9250828201905080821115611b4957611b48611aa4565b5b92915050565b6000611b5a826115f7565b9150611b65836115f7565b9250828203905081811115611b7d57611b7c611aa4565b5b92915050565b6000604082019050611b98600083018561169b565b611ba560208301846116b8565b9392505050565b600060e082019050611bc1600083018a61165a565b611bce602083018961169b565b611bdb60408301886116b8565b611be8606083018761169b565b611bf5608083018661165a565b611c0260a083018561165a565b611c0f60c083018461165a565b98975050505050505050565b6000611c26826115f7565b915060008203611c3957611c38611aa4565b5b600182039050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611c8b601f83611c44565b9150611c9682611c55565b602082019050919050565b60006020820190508181036000830152611cba81611c7e565b905091905056fea26469706673582212209f44daf73445b6b77f53e16367ff692ad6267532ccee43ddadaed4177700d61b64736f6c63430008130033";

type PromFieldSettingDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromFieldSettingDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromFieldSettingDao__factory extends ContractFactory {
  constructor(...args: PromFieldSettingDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromFieldSettingDao> {
    return super.deploy(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    ) as Promise<PromFieldSettingDao>;
  }
  override getDeployTransaction(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    );
  }
  override attach(address: string): PromFieldSettingDao {
    return super.attach(address) as PromFieldSettingDao;
  }
  override connect(signer: Signer): PromFieldSettingDao__factory {
    return super.connect(signer) as PromFieldSettingDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromFieldSettingDaoInterface {
    return new utils.Interface(_abi) as PromFieldSettingDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromFieldSettingDao {
    return new Contract(address, _abi, signerOrProvider) as PromFieldSettingDao;
  }
}
