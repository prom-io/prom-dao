/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PromFieldSettingDao,
  PromFieldSettingDaoInterface,
} from "../../../contracts/PromFeesDao.sol/PromFieldSettingDao";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialVotesThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExpiredProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "IneligibleImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCleanse",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "targetFee",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "FeeProposalImplemented",
    type: "event",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cleanseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_targetPlatformFee",
        type: "uint16",
      },
    ],
    name: "createFeeUpdateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposalIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "downvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getAllParticipatedProposalsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOngoingProposals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "implementProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposal",
    outputs: [
      {
        internalType: "uint256",
        name: "deadlineTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetCollection",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "targetPlatformFee",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "proposalCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalDownvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalUpvotesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalIndex",
        type: "uint256",
      },
    ],
    name: "upvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votesThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200294838038062002948833981810160405281019062000037919062000162565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550600260008154809291906200009c90620001d8565b9190505550505062000225565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000db82620000ae565b9050919050565b6000620000ef82620000ce565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b6000819050919050565b6200013c8162000127565b81146200014857600080fd5b50565b6000815190506200015c8162000131565b92915050565b600080604083850312156200017c576200017b620000a9565b5b60006200018c8582860162000110565b92505060206200019f858286016200014b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001e58262000127565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200021a5762000219620001a9565b5b600182019050919050565b61271380620002356000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063837f28331161008c578063ef64794d11610066578063ef64794d1461024f578063f31fdad41461027f578063f3ad65f41461029b578063f898129e146102b9576100ea565b8063837f2833146101e5578063973a55da14610215578063afe666f614610231576100ea565b806338f2e175116100c857806338f2e1751461015f5780635cd08d4d1461017d578063681321a814610199578063780569b3146101c9576100ea565b806301ddf070146100ef57806330326c171461010b57806331835fb814610141575b600080fd5b61010960048036038101906101049190611f0e565b6102d5565b005b61012560048036038101906101209190611f0e565b61060b565b6040516101389796959493929190611fa8565b60405180910390f35b6101496106bb565b6040516101569190612017565b60405180910390f35b6101676106c1565b6040516101749190612017565b60405180910390f35b6101976004803603810190610192919061205e565b6106c7565b005b6101b360048036038101906101ae91906120b1565b610814565b6040516101c09190612017565b60405180910390f35b6101e360048036038101906101de919061211d565b610839565b005b6101ff60048036038101906101fa919061215d565b610aae565b60405161020c9190612248565b60405180910390f35b61022f600480360381019061022a9190611f0e565b610d58565b005b6102396110d7565b6040516102469190612248565b60405180910390f35b610269600480360381019061026491906120b1565b61124f565b6040516102769190612017565b60405180910390f35b61029960048036038101906102949190611f0e565b611274565b005b6102a36115aa565b6040516102b091906122c9565b60405180910390f35b6102d360048036038101906102ce91906120b1565b6115d0565b005b6102dd611844565b80426004600083815260200190815260200160002060000154101561032e576040517f6496c42000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c391906122f9565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103fb9190612326565b602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190612356565b90506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205490506000811115610520576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055508060046000868152602001908152602001600020600501600082825461051891906123b2565b925050819055505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020548261057c91906123b2565b6004600086815260200190815260200160002060040160008282546105a191906123e6565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002081905550505050610608611893565b50565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900461ffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905087565b60025481565b60035481565b6106cf611844565b82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076391906122f9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fb578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fa576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61080684848461189d565b5061080f611893565b505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b610841611844565b6040518060e00160405280621275004261085b91906123e6565b8152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffcf6fd86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f391906122f9565b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152506004600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005015590505060026000815480929190610a9d9061241a565b9190505550610aaa611893565b5050565b60606000610aba6110d7565b90506000815167ffffffffffffffff811115610ad957610ad8612462565b5b604051908082528060200260200182016040528015610b075781602001602082028036833780820191505090505b5090506000805b8351811015610ca5576000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868481518110610b6d57610b6c612491565b5b602002602001015181526020019081526020016000205414610bd657838181518110610b9c57610b9b612491565b5b6020026020010151838381518110610bb757610bb6612491565b5b6020026020010181815250508180610bce9061241a565b925050610c92565b6000600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868481518110610c2c57610c2b612491565b5b602002602001015181526020019081526020016000205414610c9157838181518110610c5b57610c5a612491565b5b6020026020010151838381518110610c7657610c75612491565b5b6020026020010181815250508180610c8d9061241a565b9250505b5b8080610c9d9061241a565b915050610b0e565b5060008167ffffffffffffffff811115610cc257610cc1612462565b5b604051908082528060200260200182016040528015610cf05781602001602082028036833780820191505090505b50905060005b82811015610d4b57838181518110610d1157610d10612491565b5b6020026020010151828281518110610d2c57610d2b612491565b5b6020026020010181815250508080610d439061241a565b915050610cf6565b5080945050505050919050565b610d60611844565b6000600460008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900461ffff1661ffff1661ffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505090508060c001518160a001511080610eec57506003548160c001518260a00151610eea91906123b2565b105b15610f23576040517f20ff97d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306d2033f826040015183606001516040518363ffffffff1660e01b8152600401610f889291906124c0565b600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050507fe9312a92d5a31be2222bd01d5fc1b0aa41cb18f779ee1422b83c06ebdc06d9d1828260400151836060015184608001518560a001518660c0015160035460405161100b97969594939291906124e9565b60405180910390a1600460008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549061ffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905560058201600090555050506110d4611893565b50565b6060600060025490506000808267ffffffffffffffff8111156110fd576110fc612462565b5b60405190808252806020026020018201604052801561112b5781602001602082028036833780820191505090505b5090505b6000831461119f57828061114290612558565b93505060046000848152602001908152602001600020600001544211611195578281838151811061117657611175612491565b5b602002602001018181525050818061118d9061241a565b92505061119a565b61119f565b61112f565b60008267ffffffffffffffff8111156111bb576111ba612462565b5b6040519080825280602002602001820160405280156111e95781602001602082028036833780820191505090505b50905060005b838110156112445782818151811061120a57611209612491565b5b602002602001015182828151811061122557611224612491565b5b602002602001018181525050808061123c9061241a565b9150506111ef565b508094505050505090565b6005602052816000526040600020602052806000526040600020600091509150505481565b61127c611844565b8042600460008381526020019081526020016000206000015410156112cd576040517f6496c42000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af115801561133e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136291906122f9565b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161139a9190612326565b602060405180830381865afa1580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190612356565b90506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054905060008111156114bf576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002081905550806004600086815260200190815260200160002060040160008282546114b791906123b2565b925050819055505b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020548261151b91906123b2565b60046000868152602001908152602001600020600501600082825461154091906123e6565b9250508190555081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020819055505050506115a7611893565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115d8611844565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636df8de736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c91906122f9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611704578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611703576040517f0bde90b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600061170f84610aae565b905060005b81518110156118355761175c6040518060400160405280600181526020017f690000000000000000000000000000000000000000000000000000000000000081525082611cd9565b61177f82828151811061177257611771612491565b5b6020026020010151611d75565b6117be6040518060400160405280600581526020017f766f74657200000000000000000000000000000000000000000000000000000081525086611e0e565b6117fd6040518060400160405280600681526020017f616d6f756e74000000000000000000000000000000000000000000000000000081525085611cd9565b6118228583838151811061181457611813612491565b5b60200260200101518661189d565b808061182d9061241a565b915050611714565b505050611840611893565b5050565b600260005403611889576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611880906125de565b60405180910390fd5b6002600081905550565b6001600081905550565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414611aba57600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115611a2157600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020546004600084815260200190815260200160002060050160008282546119c391906123b2565b925050819055506000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611a8191906123b2565b9250508190555080600460008481526020019081526020016000206005016000828254611aae91906123b2565b92505081905550611cd4565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414611cd357600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811115611c3e57600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054600460008481526020019081526020016000206004016000828254611be091906123b2565b925050819055506000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055505b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611c9e91906123b2565b9250508190555080600460008481526020019081526020016000206004016000828254611ccb91906123b2565b925050819055505b5b505050565b611d718282604051602401611cef92919061267d565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611eaa565b5050565b611e0b81604051602401611d899190612017565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611eaa565b50565b611ea68282604051602401611e249291906126ad565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611eaa565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b611eeb81611ed8565b8114611ef657600080fd5b50565b600081359050611f0881611ee2565b92915050565b600060208284031215611f2457611f23611ed3565b5b6000611f3284828501611ef9565b91505092915050565b611f4481611ed8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f7582611f4a565b9050919050565b611f8581611f6a565b82525050565b600061ffff82169050919050565b611fa281611f8b565b82525050565b600060e082019050611fbd600083018a611f3b565b611fca6020830189611f7c565b611fd76040830188611f7c565b611fe46060830187611f99565b611ff16080830186611f7c565b611ffe60a0830185611f3b565b61200b60c0830184611f3b565b98975050505050505050565b600060208201905061202c6000830184611f3b565b92915050565b61203b81611f6a565b811461204657600080fd5b50565b60008135905061205881612032565b92915050565b60008060006060848603121561207757612076611ed3565b5b600061208586828701612049565b935050602061209686828701611ef9565b92505060406120a786828701611ef9565b9150509250925092565b600080604083850312156120c8576120c7611ed3565b5b60006120d685828601612049565b92505060206120e785828601611ef9565b9150509250929050565b6120fa81611f8b565b811461210557600080fd5b50565b600081359050612117816120f1565b92915050565b6000806040838503121561213457612133611ed3565b5b600061214285828601612049565b925050602061215385828601612108565b9150509250929050565b60006020828403121561217357612172611ed3565b5b600061218184828501612049565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6121bf81611ed8565b82525050565b60006121d183836121b6565b60208301905092915050565b6000602082019050919050565b60006121f58261218a565b6121ff8185612195565b935061220a836121a6565b8060005b8381101561223b57815161222288826121c5565b975061222d836121dd565b92505060018101905061220e565b5085935050505092915050565b6000602082019050818103600083015261226281846121ea565b905092915050565b6000819050919050565b600061228f61228a61228584611f4a565b61226a565b611f4a565b9050919050565b60006122a182612274565b9050919050565b60006122b382612296565b9050919050565b6122c3816122a8565b82525050565b60006020820190506122de60008301846122ba565b92915050565b6000815190506122f381612032565b92915050565b60006020828403121561230f5761230e611ed3565b5b600061231d848285016122e4565b91505092915050565b600060208201905061233b6000830184611f7c565b92915050565b60008151905061235081611ee2565b92915050565b60006020828403121561236c5761236b611ed3565b5b600061237a84828501612341565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123bd82611ed8565b91506123c883611ed8565b92508282039050818111156123e0576123df612383565b5b92915050565b60006123f182611ed8565b91506123fc83611ed8565b925082820190508082111561241457612413612383565b5b92915050565b600061242582611ed8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361245757612456612383565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506124d56000830185611f7c565b6124e26020830184611f99565b9392505050565b600060e0820190506124fe600083018a611f3b565b61250b6020830189611f7c565b6125186040830188611f99565b6125256060830187611f7c565b6125326080830186611f3b565b61253f60a0830185611f3b565b61254c60c0830184611f3b565b98975050505050505050565b600061256382611ed8565b91506000820361257657612575612383565b5b600182039050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006125c8601f83612581565b91506125d382612592565b602082019050919050565b600060208201905081810360008301526125f7816125bb565b9050919050565b600081519050919050565b60005b8381101561262757808201518184015260208101905061260c565b60008484015250505050565b6000601f19601f8301169050919050565b600061264f826125fe565b6126598185612581565b9350612669818560208601612609565b61267281612633565b840191505092915050565b600060408201905081810360008301526126978185612644565b90506126a66020830184611f3b565b9392505050565b600060408201905081810360008301526126c78185612644565b90506126d66020830184611f7c565b939250505056fea26469706673582212201f9f1609f653b85eb8191aa9beedb71eeae49d6f120270838ecd140c22f3291664736f6c63430008130033";

type PromFieldSettingDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PromFieldSettingDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PromFieldSettingDao__factory extends ContractFactory {
  constructor(...args: PromFieldSettingDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PromFieldSettingDao> {
    return super.deploy(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    ) as Promise<PromFieldSettingDao>;
  }
  override getDeployTransaction(
    _addressRegistry: PromiseOrValue<string>,
    _initialVotesThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressRegistry,
      _initialVotesThreshold,
      overrides || {}
    );
  }
  override attach(address: string): PromFieldSettingDao {
    return super.attach(address) as PromFieldSettingDao;
  }
  override connect(signer: Signer): PromFieldSettingDao__factory {
    return super.connect(signer) as PromFieldSettingDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PromFieldSettingDaoInterface {
    return new utils.Interface(_abi) as PromFieldSettingDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PromFieldSettingDao {
    return new Contract(address, _abi, signerOrProvider) as PromFieldSettingDao;
  }
}
