/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RestrictedContracts,
  RestrictedContractsInterface,
} from "../../../contracts/action-validator/RestrictedContracts";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameIndex",
        type: "uint256",
      },
    ],
    name: "ContractRestrictionStatusSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isContractRestricted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cbCharacters",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cbWeapons",
        type: "address",
      },
    ],
    name: "setCbContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gameIndex",
        type: "uint256",
      },
    ],
    name: "setIsContractRestricted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106f28061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063178718e314610067578063715018a6146100835780638da5cb5b1461008d578063c3bc12e7146100ab578063ceb70904146100db578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c91906104ac565b610113565b005b61008b610163565b005b610095610177565b6040516100a291906104fb565b60405180910390f35b6100c560048036038101906100c09190610516565b6101a0565b6040516100d29190610552565b60405180910390f35b6100f560048036038101906100f0919061056d565b6101b8565b005b610111600480360381019061010c9190610516565b610246565b005b61011b6102c9565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b61016b6102c9565b6101756000610347565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090505481565b6101c06102c9565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61024e6102c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610630565b60405180910390fd5b6102c681610347565b50565b6102d161040b565b73ffffffffffffffffffffffffffffffffffffffff166102ef610177565b73ffffffffffffffffffffffffffffffffffffffff1614610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c9061069c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b811461045e57600080fd5b50565b6000813590506104708161044a565b92915050565b6000819050919050565b61048981610476565b811461049457600080fd5b50565b6000813590506104a681610480565b92915050565b600080604083850312156104c3576104c2610413565b5b60006104d185828601610461565b92505060206104e285828601610497565b9150509250929050565b6104f581610438565b82525050565b600060208201905061051060008301846104ec565b92915050565b60006020828403121561052c5761052b610413565b5b600061053a84828501610461565b91505092915050565b61054c81610476565b82525050565b60006020820190506105676000830184610543565b92915050565b6000806040838503121561058457610583610413565b5b600061059285828601610461565b92505060206105a385828601610461565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061061a6026836105ad565b9150610625826105be565b604082019050919050565b600060208201905081810360008301526106498161060d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106866020836105ad565b915061069182610650565b602082019050919050565b600060208201905081810360008301526106b581610679565b905091905056fea2646970667358221220fe6e557d724ad7532ed515e24552e04f548ab14fabe0fd797e29297432b341aa64736f6c63430008130033";

type RestrictedContractsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RestrictedContractsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RestrictedContracts__factory extends ContractFactory {
  constructor(...args: RestrictedContractsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RestrictedContracts> {
    return super.deploy(overrides || {}) as Promise<RestrictedContracts>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RestrictedContracts {
    return super.attach(address) as RestrictedContracts;
  }
  override connect(signer: Signer): RestrictedContracts__factory {
    return super.connect(signer) as RestrictedContracts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RestrictedContractsInterface {
    return new utils.Interface(_abi) as RestrictedContractsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RestrictedContracts {
    return new Contract(address, _abi, signerOrProvider) as RestrictedContracts;
  }
}
