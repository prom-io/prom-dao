/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AddressRegistry,
  AddressRegistryInterface,
} from "../../../contracts/helpers/AddressRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newActionValidator",
        type: "address",
      },
    ],
    name: "ActionValidatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimalVersion",
        type: "uint256",
      },
    ],
    name: "ERC1155CollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ERC1155TokenStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimalVersion",
        type: "uint256",
      },
    ],
    name: "ERC721CollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "proxyFactory",
        type: "address",
      },
    ],
    name: "ProxyFactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "royaltyCollector",
        type: "address",
      },
    ],
    name: "RoyaltyCollectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "TradeCollectionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TradeMarketplaceFeeReceiverUpdated",
        type: "address",
      },
    ],
    name: "TradeMarketplaceFeeReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tradeMarketplace",
        type: "address",
      },
    ],
    name: "TradeMarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newVaultManager",
        type: "address",
      },
    ],
    name: "VaultManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bundleMarketplace",
        type: "address",
      },
    ],
    name: "bundleMarketplaceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ERC1155CollectionVaultVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ERC721CollectionVaultVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionValidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bundleMarketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationPower",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isERC1155Enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isERC1155TokenDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTokenEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTradeCollectionEnabled",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "promFeesDao",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_actionValidator",
        type: "address",
      },
    ],
    name: "setActionValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bundleMarketplace",
        type: "address",
      },
    ],
    name: "setBundleMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimalVersion",
        type: "uint256",
      },
    ],
    name: "setERC1155CollectionVaultVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimalVersion",
        type: "uint256",
      },
    ],
    name: "setERC721CollectionVaultVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementationPower",
        type: "address",
      },
    ],
    name: "setImplementationPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsERC1155TokenDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setIsTokenEligible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_fee",
        type: "uint16",
      },
    ],
    name: "setIsTradeCollectionEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMarketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_promFeesDao",
        type: "address",
      },
    ],
    name: "setPromFeesDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newProxyFactory",
        type: "address",
      },
    ],
    name: "setProxyFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRoyaltyCollector",
        type: "address",
      },
    ],
    name: "setRoyaltyCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_safeVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "setSafeVaultVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeMarketplace",
        type: "address",
      },
    ],
    name: "setTradeMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeMarketplaceFeeReceiver",
        type: "address",
      },
    ],
    name: "setTradeMarketplaceFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVaultManager",
        type: "address",
      },
    ],
    name: "setVaultManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeMarketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeMarketplaceFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaultVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119ba8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063a3caeb0a11610125578063e2b9aa06116100ad578063f2fde38b1161007c578063f2fde38b14610613578063f35d39c61461062f578063f6d9bec51461064b578063fbddd75114610667578063ffcf6fd8146106835761021c565b8063e2b9aa061461058d578063eae4a21c146105a9578063eee83ea7146105c7578063f2cfe356146105e35761021c565b8063b543503e116100f4578063b543503e146104e9578063c10f1a7514610505578063c60ab53514610523578063cbced39d14610553578063d616b76a1461056f5761021c565b8063a3caeb0a14610461578063abc8c7af1461047d578063acb975011461049b578063b50dfa71146104cb5761021c565b80637815a254116101a85780638809ae76116101775780638809ae76146103cf5780638a4adf24146103eb5780638da5cb5b146104095780639e1f5b28146104275780639fff34c9146104455761021c565b80637815a2541461034b578063804d69c014610367578063823e371c14610383578063842d4cbf146103b35761021c565b80636d6ac730116101ef5780636d6ac730146102b95780636df8de73146102d7578063715018a6146102f55780637319d04b146102ff57806373ad6c2d1461032f5761021c565b806306d2033f146102215780631db8b7aa1461023d57806344680e751461026d5780635a50afa01461029d575b600080fd5b61023b600480360381019061023691906114be565b6106a1565b005b610257600480360381019061025291906114fe565b6107f0565b604051610264919061153a565b60405180910390f35b610287600480360381019061028291906114fe565b610811565b604051610294919061156e565b60405180910390f35b6102b760048036038101906102b291906115ed565b610829565b005b6102c16108d9565b6040516102ce919061164f565b60405180910390f35b6102df6108ff565b6040516102ec919061164f565b60405180910390f35b6102fd610925565b005b6103196004803603810190610314919061166a565b610939565b60405161032691906116b9565b60405180910390f35b610349600480360381019061034491906114fe565b6109ed565b005b6103656004803603810190610360919061166a565b610a70565b005b610381600480360381019061037c91906114fe565b610b48565b005b61039d600480360381019061039891906114fe565b610bcb565b6040516103aa919061156e565b60405180910390f35b6103cd60048036038101906103c891906114fe565b610be3565b005b6103e960048036038101906103e4919061166a565b610c2f565b005b6103f3610cb8565b604051610400919061164f565b60405180910390f35b610411610cde565b60405161041e919061164f565b60405180910390f35b61042f610d07565b60405161043c919061164f565b60405180910390f35b61045f600480360381019061045a91906114fe565b610d2d565b005b61047b600480360381019061047691906114fe565b610d79565b005b610485610dc5565b604051610492919061164f565b60405180910390f35b6104b560048036038101906104b0919061166a565b610deb565b6040516104c291906116b9565b60405180910390f35b6104d3610e1a565b6040516104e0919061164f565b60405180910390f35b61050360048036038101906104fe91906114fe565b610e40565b005b61050d610ec3565b60405161051a919061164f565b60405180910390f35b61053d600480360381019061053891906114fe565b610ee9565b60405161054a919061156e565b60405180910390f35b61056d600480360381019061056891906114fe565b610f01565b005b610577610f84565b604051610584919061164f565b60405180910390f35b6105a760048036038101906105a2919061166a565b610faa565b005b6105b1611033565b6040516105be919061164f565b60405180910390f35b6105e160048036038101906105dc91906114fe565b611059565b005b6105fd60048036038101906105f891906114fe565b6110dc565b60405161060a91906116b9565b60405180910390f35b61062d600480360381019061062891906114fe565b6110fc565b005b610649600480360381019061064491906114fe565b61117f565b005b610665600480360381019061066091906116d4565b6111cb565b005b610681600480360381019061067c91906114fe565b61122e565b005b61068b6112b1565b604051610698919061164f565b60405180910390f35b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ff576106fe6112d7565b5b60008161ffff161015801561071a57506127108161ffff1611155b610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611771565b60405180910390fd5b80601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055507f7cbcf3d7c41aa6aecf4090bde5964016227e312f19a7e58d03c4de389f14e60982826040516107e4929190611791565b60405180910390a15050565b60106020528060005260406000206000915054906101000a900461ffff1681565b600d6020528060005260406000206000915090505481565b6108316112d7565b80600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa6fdc2fd9c7b4cd44d514b8e689a836238436ff296344c1f0095ac99ad95c72d8383836040516108cc939291906117ba565b60405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61092d6112d7565b6109376000611355565b565b600080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156109e55750600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16155b905092915050565b6109f56112d7565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc81604051610a65919061164f565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af79061183d565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b610b506112d7565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5afc39f421eeb15ee3787d6fe81fca84a7f13ed1348c6f673ce12ce80aa1ed7281604051610bc0919061164f565b60405180910390a150565b600e6020528060005260406000206000915090505481565b610beb6112d7565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c376112d7565b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f0edd0768f543760ea601d91778e2e18fb6479b95c21bdaccec59459a32a63cb78282604051610cac92919061185d565b60405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d356112d7565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610d816112d7565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e486112d7565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcdba42b90a1db6ef05bf5758b36301b44ac50226364e050628807a6ceef24bc281604051610eb8919061164f565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915090505481565b610f096112d7565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0c04a9d1c53858cccafc920a9f0907062bedd4540be0c86744833612a7dc628381604051610f79919061164f565b60405180910390a150565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fb26112d7565b80600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6424e6bd708b8fd5bff8d2b3ce32081cbb05cbe22a2c18b9b52ed6816418d5bf828260405161102792919061185d565b60405180910390a15050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110616112d7565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6ed761c4f6d0492bd10cfdea6169b43b198eb25f9316b0a5b202625dc65b568f816040516110d1919061164f565b60405180910390a150565b600c6020528060005260406000206000915054906101000a900460ff1681565b6111046112d7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116a906118f8565b60405180910390fd5b61117c81611355565b50565b6111876112d7565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111d36112d7565b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6112366112d7565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f06fb15b3928ea45c766cc3b08212ecc978647d51cf9551cdd13a70d6a00197c7816040516112a6919061164f565b60405180910390a150565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112df611419565b73ffffffffffffffffffffffffffffffffffffffff166112fd610cde565b73ffffffffffffffffffffffffffffffffffffffff1614611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134a90611964565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061145182611426565b9050919050565b61146181611446565b811461146c57600080fd5b50565b60008135905061147e81611458565b92915050565b600061ffff82169050919050565b61149b81611484565b81146114a657600080fd5b50565b6000813590506114b881611492565b92915050565b600080604083850312156114d5576114d4611421565b5b60006114e38582860161146f565b92505060206114f4858286016114a9565b9150509250929050565b60006020828403121561151457611513611421565b5b60006115228482850161146f565b91505092915050565b61153481611484565b82525050565b600060208201905061154f600083018461152b565b92915050565b6000819050919050565b61156881611555565b82525050565b6000602082019050611583600083018461155f565b92915050565b61159281611555565b811461159d57600080fd5b50565b6000813590506115af81611589565b92915050565b60008115159050919050565b6115ca816115b5565b81146115d557600080fd5b50565b6000813590506115e7816115c1565b92915050565b60008060006060848603121561160657611605611421565b5b60006116148682870161146f565b9350506020611625868287016115a0565b9250506040611636868287016115d8565b9150509250925092565b61164981611446565b82525050565b60006020820190506116646000830184611640565b92915050565b6000806040838503121561168157611680611421565b5b600061168f8582860161146f565b92505060206116a0858286016115a0565b9150509250929050565b6116b3816115b5565b82525050565b60006020820190506116ce60008301846116aa565b92915050565b600080604083850312156116eb576116ea611421565b5b60006116f98582860161146f565b925050602061170a858286016115d8565b9150509250929050565b600082825260208201905092915050565b7f666565206f7574206f662072616e676500000000000000000000000000000000600082015250565b600061175b601083611714565b915061176682611725565b602082019050919050565b6000602082019050818103600083015261178a8161174e565b9050919050565b60006040820190506117a66000830185611640565b6117b3602083018461152b565b9392505050565b60006060820190506117cf6000830186611640565b6117dc602083018561155f565b6117e960408301846116aa565b949350505050565b7f4f6e6c792050726f6d20666163746f727920616c6c6f77656400000000000000600082015250565b6000611827601983611714565b9150611832826117f1565b602082019050919050565b600060208201905081810360008301526118568161181a565b9050919050565b60006040820190506118726000830185611640565b61187f602083018461155f565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118e2602683611714565b91506118ed82611886565b604082019050919050565b60006020820190508181036000830152611911816118d5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061194e602083611714565b915061195982611918565b602082019050919050565b6000602082019050818103600083015261197d81611941565b905091905056fea264697066735822122023c273a9afd3f3263349ab552ec2b554d7a69dd0889490466b60031118ad34a064736f6c63430008130033";

type AddressRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressRegistry__factory extends ContractFactory {
  constructor(...args: AddressRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressRegistry> {
    return super.deploy(overrides || {}) as Promise<AddressRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressRegistry {
    return super.attach(address) as AddressRegistry;
  }
  override connect(signer: Signer): AddressRegistry__factory {
    return super.connect(signer) as AddressRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressRegistryInterface {
    return new utils.Interface(_abi) as AddressRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressRegistry {
    return new Contract(address, _abi, signerOrProvider) as AddressRegistry;
  }
}
